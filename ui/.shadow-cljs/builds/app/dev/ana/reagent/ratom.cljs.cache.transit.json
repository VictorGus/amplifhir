["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\n} else {\nreagent.ratom.debug = false;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\n} else {\nreagent.ratom.generation = (0);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\n} else {\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn cljs.core.deref(reagent.ratom._running);\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nvar and__4120__auto__ = (len === reagent.ratom.arr_len(y));\nif(and__4120__auto__){\nvar i = (0);\nwhile(true){\nvar or__4131__auto__ = (i === len);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__44822 = (i + (1));\ni = G__44822;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn and__4120__auto__;\n}\n});\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\n\nvar _STAR_ratom_context_STAR__orig_val__44753 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__44754 = obj;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__44754;\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__44753;\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n * `deref`ed atoms captured during `in-context`, if any differ from the\n * `watching` field of r.  Clears the `dirty?` flag on r.\n * \n * Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n * the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\nr.captured = null;\n\nr.ratomGeneration = reagent.ratom.generation = (reagent.ratom.generation + (1));\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\nr.dirty_QMARK_ = false;\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5724__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5724__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5724__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn r.captured = [derefed];\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f));\n\nreturn this$.watchesArr = null;\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key));\n\nreturn this$.watchesArr = null;\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?this$.watchesArr = cljs.core.reduce_kv(((function (w){\nreturn (function (p1__44755_SHARP_,p2__44756_SHARP_,p3__44757_SHARP_){\nvar G__44758 = p1__44755_SHARP_;\nG__44758.push(p2__44756_SHARP_);\n\nG__44758.push(p3__44757_SHARP_);\n\nreturn G__44758;\n});})(w))\n,[],this$.watches):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_44823 = (a[i]);\nvar f_44824 = (a[(i + (1))]);\n(f_44824.cljs$core$IFn$_invoke$arity$4 ? f_44824.cljs$core$IFn$_invoke$arity$4(k_44823,this$,old,new$) : f_44824.call(null,k_44823,this$,old,new$));\n\nvar G__44825 = ((2) + i);\ni = G__44825;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__44759 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__44760 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__44760;\n\ntry{return cljs.core._deref(a);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__44759;\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\">\");\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\n} else {\nreagent.ratom.rea_queue = null;\n}\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\nreagent.ratom.rea_queue = [];\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\nreagent.ratom.rea_queue = null;\n\nvar n__4607__auto___44826 = q.length;\nvar i_44827 = (0);\nwhile(true){\nif((i_44827 < n__4607__auto___44826)){\n(q[i_44827])._queued_run();\n\nvar G__44828 = (i_44827 + (1));\ni_44827 = G__44828;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\nreagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_;\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Validator rejected reference state\",\"\\n\",\"(validator new-value)\"].join('')));\n}\n}\n\nvar old_value = self__.state;\nself__.state = new_value;\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n});\n\nreagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.RAtom.cljs$lang$type = true;\n\nreagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\";\n\nreagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/RAtom\");\n});\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__44764 = arguments.length;\nswitch (G__44764) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4751__auto__ = [];\nvar len__4730__auto___44834 = arguments.length;\nvar i__4731__auto___44835 = (0);\nwhile(true){\nif((i__4731__auto___44835 < len__4730__auto___44834)){\nargs_arr__4751__auto__.push((arguments[i__4731__auto___44835]));\n\nvar G__44836 = (i__4731__auto___44835 + (1));\ni__4731__auto___44835 = G__44836;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4752__auto__ = (new cljs.core.IndexedSeq(args_arr__4751__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4752__auto__);\n\n}\n});\n\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n});\n\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__44765){\nvar map__44766 = p__44765;\nvar map__44766__$1 = (((((!((map__44766 == null))))?(((((map__44766.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__44766.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__44766):map__44766);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44766__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44766__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n});\n\n/** @this {Function} */\nreagent.ratom.atom.cljs$lang$applyTo = (function (seq44762){\nvar G__44763 = cljs.core.first(seq44762);\nvar seq44762__$1 = cljs.core.next(seq44762);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44763,seq44762__$1);\n});\n\nreagent.ratom.atom.cljs$lang$maxFixedArity = (1);\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__44768 = f;\nvar G__44769 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__44770 = ((function (G__44768,G__44769,m,m__$1,r){\nreturn (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __44837 = o.reagReactionCache;\nvar __44838__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__44837,k);\no.reagReactionCache = __44838__$1;\n\nif((!((obj == null)))){\nobj.reaction = null;\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});})(G__44768,G__44769,m,m__$1,r))\n;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__44768,G__44769,G__44770) : reagent.ratom.make_reaction.call(null,G__44768,G__44769,G__44770));\n})();\nvar v = cljs.core._deref(r__$1);\no.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1);\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\nobj.reaction = r__$1;\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\nreagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5722__auto__ = self__.reaction;\nif((temp__5722__auto__ == null)){\nreturn reagent.ratom.cached_reaction(((function (temp__5722__auto__,this$__$1){\nreturn (function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n});})(temp__5722__auto__,this$__$1))\n,self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5722__auto__;\nreturn cljs.core._deref(r);\n}\n});\n\nreagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n});\n\nreagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n});\n\nreagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\n});\n\nreagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Track.cljs$lang$type = true;\n\nreagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\";\n\nreagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Track\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__44771 = ((function (t){\nreturn (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});})(t))\n;\nvar G__44772 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__44773 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__44771,G__44772,G__44773) : reagent.ratom.make_reaction.call(null,G__44771,G__44772,G__44773));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___44841 = arguments.length;\nvar i__4731__auto___44842 = (0);\nwhile(true){\nif((i__4731__auto___44842 < len__4730__auto___44841)){\nargs__4736__auto__.push((arguments[i__4731__auto___44842]));\n\nvar G__44843 = (i__4731__auto___44842 + (1));\ni__4731__auto___44842 = G__44843;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track(f,args);\n});\n\nreagent.ratom.track.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.track.cljs$lang$applyTo = (function (seq44774){\nvar G__44775 = cljs.core.first(seq44774);\nvar seq44774__$1 = cljs.core.next(seq44774);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44775,seq44774__$1);\n});\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___44846 = arguments.length;\nvar i__4731__auto___44847 = (0);\nwhile(true){\nif((i__4731__auto___44847 < len__4730__auto___44846)){\nargs__4736__auto__.push((arguments[i__4731__auto___44847]));\n\nvar G__44848 = (i__4731__auto___44847 + (1));\ni__4731__auto___44847 = G__44848;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n});\n\nreagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq44776){\nvar G__44777 = cljs.core.first(seq44776);\nvar seq44776__$1 = cljs.core.next(seq44776);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44777,seq44776__$1);\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__44778 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__44779 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__44779;\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__44778;\n}});\n\nreagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\nself__.state = newstate;\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n});\n\nreagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__44781 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__44781) : f.call(null,G__44781));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__44782 = a__$1._peek();\nvar G__44783 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__44782,G__44783) : f.call(null,G__44782,G__44783));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__44784 = a__$1._peek();\nvar G__44785 = x;\nvar G__44786 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__44784,G__44785,G__44786) : f.call(null,G__44784,G__44785,G__44786));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5722__auto__ = self__.reaction;\nif((temp__5722__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?((function (temp__5722__auto__,oldstate,this$__$1){\nreturn (function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n});})(temp__5722__auto__,oldstate,this$__$1))\n:((function (temp__5722__auto__,oldstate,this$__$1){\nreturn (function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n});})(temp__5722__auto__,oldstate,this$__$1))\n);\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5722__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n});\n\nreagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.RCursor.cljs$lang$type = true;\n\nreagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\";\n\nreagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/RCursor\");\n});\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\nif((function (){var or__4131__auto__ = (((!((src == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn ((cljs.core.ifn_QMARK_(src)) && ((!(cljs.core.vector_QMARK_(src)))));\n}\n})()){\n} else {\nthrow (new Error([\"Assert failed: \",[\"src must be a reactive atom or a function, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0)),\" while attempting to get path: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0))].join(''),\"\\n\",\"(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\"].join('')));\n}\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5724__auto__ = v.destroy;\nif((temp__5724__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5724__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5722__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5722__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5722__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null,this$));\n} else {\nvar m__4431__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n}\n});\n\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4434__auto__.call(null,this$,f));\n} else {\nvar m__4431__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4431__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nvar x__4433__auto__ = (((this$ == null))?null:this$);\nvar m__4434__auto__ = (reagent.ratom.run[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null,this$));\n} else {\nvar m__4431__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__44790 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__44791 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__44791;\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__44790;\n}});\n\nreagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\nself__.dirty_QMARK_ = true;\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n});\n\nreagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\nself__.watching = derefed;\n\nvar seq__44792_44854 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__44793_44855 = null;\nvar count__44794_44856 = (0);\nvar i__44795_44857 = (0);\nwhile(true){\nif((i__44795_44857 < count__44794_44856)){\nvar w_44858 = chunk__44793_44855.cljs$core$IIndexed$_nth$arity$2(null,i__44795_44857);\ncljs.core._add_watch(w_44858,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__44859 = seq__44792_44854;\nvar G__44860 = chunk__44793_44855;\nvar G__44861 = count__44794_44856;\nvar G__44862 = (i__44795_44857 + (1));\nseq__44792_44854 = G__44859;\nchunk__44793_44855 = G__44860;\ncount__44794_44856 = G__44861;\ni__44795_44857 = G__44862;\ncontinue;\n} else {\nvar temp__5720__auto___44863 = cljs.core.seq(seq__44792_44854);\nif(temp__5720__auto___44863){\nvar seq__44792_44864__$1 = temp__5720__auto___44863;\nif(cljs.core.chunked_seq_QMARK_(seq__44792_44864__$1)){\nvar c__4550__auto___44865 = cljs.core.chunk_first(seq__44792_44864__$1);\nvar G__44866 = cljs.core.chunk_rest(seq__44792_44864__$1);\nvar G__44867 = c__4550__auto___44865;\nvar G__44868 = cljs.core.count(c__4550__auto___44865);\nvar G__44869 = (0);\nseq__44792_44854 = G__44866;\nchunk__44793_44855 = G__44867;\ncount__44794_44856 = G__44868;\ni__44795_44857 = G__44869;\ncontinue;\n} else {\nvar w_44870 = cljs.core.first(seq__44792_44864__$1);\ncljs.core._add_watch(w_44870,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__44871 = cljs.core.next(seq__44792_44864__$1);\nvar G__44872 = null;\nvar G__44873 = (0);\nvar G__44874 = (0);\nseq__44792_44854 = G__44871;\nchunk__44793_44855 = G__44872;\ncount__44794_44856 = G__44873;\ni__44795_44857 = G__44874;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__44796 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__44797 = null;\nvar count__44798 = (0);\nvar i__44799 = (0);\nwhile(true){\nif((i__44799 < count__44798)){\nvar w = chunk__44797.cljs$core$IIndexed$_nth$arity$2(null,i__44799);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__44875 = seq__44796;\nvar G__44876 = chunk__44797;\nvar G__44877 = count__44798;\nvar G__44878 = (i__44799 + (1));\nseq__44796 = G__44875;\nchunk__44797 = G__44876;\ncount__44798 = G__44877;\ni__44799 = G__44878;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__44796);\nif(temp__5720__auto__){\nvar seq__44796__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__44796__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__44796__$1);\nvar G__44879 = cljs.core.chunk_rest(seq__44796__$1);\nvar G__44880 = c__4550__auto__;\nvar G__44881 = cljs.core.count(c__4550__auto__);\nvar G__44882 = (0);\nseq__44796 = G__44879;\nchunk__44797 = G__44880;\ncount__44798 = G__44881;\ni__44799 = G__44882;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__44796__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__44883 = cljs.core.next(seq__44796__$1);\nvar G__44884 = null;\nvar G__44885 = (0);\nvar G__44886 = (0);\nseq__44796 = G__44883;\nchunk__44797 = G__44884;\ncount__44798 = G__44885;\ni__44799 = G__44886;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n\nreagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{self__.caught = null;\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e44800){var e = e44800;\nself__.state = e;\n\nself__.caught = e;\n\nreturn self__.dirty_QMARK_ = false;\n}});\n\nreagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\nself__.state = res;\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n});\n\nreagent.ratom.Reaction.prototype._set_opts = (function (p__44801){\nvar self__ = this;\nvar map__44802 = p__44801;\nvar map__44802__$1 = (((((!((map__44802 == null))))?(((((map__44802.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__44802.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__44802):map__44802);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44802__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44802__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44802__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44802__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\nthis$.auto_run = auto_run__$1;\n} else {\n}\n\nif((!((on_set == null)))){\nthis$.on_set = on_set;\n} else {\n}\n\nif((!((on_dispose == null)))){\nthis$.on_dispose = on_dispose;\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn this$.nocache_QMARK_ = no_cache;\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\nself__.watching = null;\n\nself__.state = null;\n\nself__.auto_run = null;\n\nself__.dirty_QMARK_ = true;\n\nvar seq__44804_44888 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__44805_44889 = null;\nvar count__44806_44890 = (0);\nvar i__44807_44891 = (0);\nwhile(true){\nif((i__44807_44891 < count__44806_44890)){\nvar w_44892 = chunk__44805_44889.cljs$core$IIndexed$_nth$arity$2(null,i__44807_44891);\ncljs.core._remove_watch(w_44892,this$__$1);\n\n\nvar G__44893 = seq__44804_44888;\nvar G__44894 = chunk__44805_44889;\nvar G__44895 = count__44806_44890;\nvar G__44896 = (i__44807_44891 + (1));\nseq__44804_44888 = G__44893;\nchunk__44805_44889 = G__44894;\ncount__44806_44890 = G__44895;\ni__44807_44891 = G__44896;\ncontinue;\n} else {\nvar temp__5720__auto___44897 = cljs.core.seq(seq__44804_44888);\nif(temp__5720__auto___44897){\nvar seq__44804_44898__$1 = temp__5720__auto___44897;\nif(cljs.core.chunked_seq_QMARK_(seq__44804_44898__$1)){\nvar c__4550__auto___44899 = cljs.core.chunk_first(seq__44804_44898__$1);\nvar G__44900 = cljs.core.chunk_rest(seq__44804_44898__$1);\nvar G__44901 = c__4550__auto___44899;\nvar G__44902 = cljs.core.count(c__4550__auto___44899);\nvar G__44903 = (0);\nseq__44804_44888 = G__44900;\nchunk__44805_44889 = G__44901;\ncount__44806_44890 = G__44902;\ni__44807_44891 = G__44903;\ncontinue;\n} else {\nvar w_44904 = cljs.core.first(seq__44804_44898__$1);\ncljs.core._remove_watch(w_44904,this$__$1);\n\n\nvar G__44905 = cljs.core.next(seq__44804_44898__$1);\nvar G__44906 = null;\nvar G__44907 = (0);\nvar G__44908 = (0);\nseq__44804_44888 = G__44905;\nchunk__44805_44889 = G__44906;\ncount__44806_44890 = G__44907;\ni__44807_44891 = G__44908;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5724__auto__ = this$__$1.on_dispose_arr;\nif((temp__5724__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5724__auto__;\nvar n__4607__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4607__auto__)){\nvar fexpr__44808_44909 = (a[i]);\n(fexpr__44808_44909.cljs$core$IFn$_invoke$arity$1 ? fexpr__44808_44909.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__44808_44909.call(null,this$__$1));\n\nvar G__44910 = (i + (1));\ni = G__44910;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5722__auto__ = this$__$1.on_dispose_arr;\nif((temp__5722__auto__ == null)){\nreturn this$__$1.on_dispose_arr = [f__$1];\n} else {\nvar a = temp__5722__auto__;\nreturn a.push(f__$1);\n}\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Reaction is read only; on-set is not allowed\",\"\\n\",\"(fn? (.-on-set a))\"].join('')));\n}\n\nvar oldval = self__.state;\nself__.state = newval;\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__44809 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__44809) : f__$1.call(null,G__44809));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__44810 = a__$1._peek_at();\nvar G__44811 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__44810,G__44811) : f__$1.call(null,G__44810,G__44811));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__44812 = a__$1._peek_at();\nvar G__44813 = x;\nvar G__44814 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__44812,G__44813,G__44814) : f__$1.call(null,G__44812,G__44813,G__44814));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.flush_BANG_();\n\nreturn this$__$1._run(false);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5724__auto___44911 = self__.caught;\nif((temp__5724__auto___44911 == null)){\n} else {\nvar e_44912 = temp__5724__auto___44911;\nthrow e_44912;\n}\n\nvar non_reactive_44913 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_44913){\nreagent.ratom.flush_BANG_();\n} else {\n}\n\nif(((non_reactive_44913) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_44914 = self__.state;\nself__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_44914,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_44914,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n});\n\nreagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Reaction.cljs$lang$type = true;\n\nreagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\";\n\nreagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Reaction\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___44916 = arguments.length;\nvar i__4731__auto___44917 = (0);\nwhile(true){\nif((i__4731__auto___44917 < len__4730__auto___44916)){\nargs__4736__auto__.push((arguments[i__4731__auto___44917]));\n\nvar G__44918 = (i__4731__auto___44917 + (1));\ni__4731__auto___44917 = G__44918;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nreagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__44817){\nvar map__44818 = p__44817;\nvar map__44818__$1 = (((((!((map__44818 == null))))?(((((map__44818.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__44818.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__44818):map__44818);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44818__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44818__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44818__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n});\n\nreagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq44815){\nvar G__44816 = cljs.core.first(seq44815);\nvar seq44815__$1 = cljs.core.next(seq44815);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__44816,seq44815__$1);\n});\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n\nr._set_opts(opts);\n\nr.f = f;\n\nr.auto_run = ((function (r,res){\nreturn (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n});})(r,res))\n;\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\nreagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(((self__.changed) && ((!((reagent.ratom._STAR_ratom_context_STAR_ == null)))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"derefing stale wrap: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(''));\n} else {\n}\n} else {\n}\n\n\nreturn self__.state;\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\nself__.changed = true;\n\nself__.state = newval;\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\n});\n\nreagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Wrapper.cljs$lang$type = true;\n\nreagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\";\n\nreagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Wrapper\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$with-let","~$reagent.ratom","~$dbg","~$reagent.debug","~$log","^H","~$warn","^H","~$error","^H","~$dev?","^H","~$time","^H"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","^E",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",36,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","^F","~:macro",true],"~$reaction",["^ ","^R",["^S",[["~$&","^U"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^V","~$reagent.ratom/reaction","^X","^F","^Y",true],"~$unchecked-aset",["^ ","^R",["^S",[["~$array","~$idx","~$val"],["^11","^12","~$idx2","~$&","~$idxv"]]],"^7",28,"^8",1,"^6","reagent/ratom.clj","^V","~$reagent.ratom/unchecked-aset","^X","^F","^Y",true],"~$unchecked-aget",["^ ","^R",["^S",[["^11","^12"],["^11","^12","~$&","~$idxs"]]],"^7",19,"^8",1,"^6","reagent/ratom.clj","^V","~$reagent.ratom/unchecked-aget","^X","^F","^Y",true],"~$run!",["^ ","^R",["^S",[["~$&","^U"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^V","~$reagent.ratom/run!","^X","^F","^Y",true]],"^V","^F","~:op","^X","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^1@","~$obj","~$goog.object","~$cljs.core","^1C","~$goog","^1D","^1B","^1B","~$reagent.impl.batching","^1E","~$clojure.set","^1F","~$util","^1@","~$s","^1F","~$batch","^1E","^H","^H"],"~:seen",["^O",["~:require","~:require-macros"]],"~:uses",null,"^1K",["^ ","^F","^F","^H","^H","^1C","^1C"],"~:form",["^S",["~$ns","^F",["^S",["~:refer-clojure","~:exclude",["^P"]]],["^S",["^1K",["^F","~:refer",["^E"]]]],["^S",["^1J",["^1@","~:as","^1G"],["^H","~:refer-macros",["^G","^I","^J","^K","^L","^M"]],["^1E","^1R","^1H"],["^1F","^1R","~$s"],["^1B","^1R","^1A"]]]]],"~:flags",["^ ","^1K",["^O",[]],"^1J",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^1D","^1C","^1@","^H","^1E","^1F","^1B"]],"^X","^F","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1619083331135,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom :refer [with-let]])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n   See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","and__4120__auto__","i","or__4131__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__44753","*ratom-context*-temp-val__44754","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5724__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__44755#","p2__44756#","p3__44757#","cljs.core/reduce-kv","G__44758","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__44759","*ratom-context*-temp-val__44760","cljs.core/-deref","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4607__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__44764","reagent.ratom/atom","args-arr__4751__auto__","len__4730__auto__","i__4731__auto__","argseq__4752__auto__","cljs.core/IndexedSeq","p__44765","map__44766","cljs.core/hash-map","cljs.core.get","seq44762","G__44763","cljs.core/first","cljs.core/next","self__4717__auto__","reagent.ratom/cached-reaction","destroy","m","G__44768","G__44769","G__44770","reagent.ratom/make-reaction","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5722__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__44771","G__44772","G__44773","args__4736__auto__","argseq__4737__auto__","reagent.ratom/track","seq44774","G__44775","cljs.core/ifn?","reagent.ratom/track!","seq44776","G__44777","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__44778","*ratom-context*-temp-val__44779","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__44781","G__44782","G__44783","G__44784","G__44785","G__44786","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","x__4433__auto__","m__4434__auto__","reagent.ratom/dispose!","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__44801","map__44802","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__44809","G__44810","G__44811","G__44812","G__44813","G__44814","*ratom-context*-orig-val__44790","*ratom-context*-temp-val__44791","cljs.core/set","seq__44792","cljs.core/seq","chunk__44793","count__44794","i__44795","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__44796","chunk__44797","count__44798","i__44799","cljs.core/-remove-watch","e44800","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__44804","chunk__44805","count__44806","i__44807","fexpr__44808","p__44817","map__44818","seq44815","G__44816","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^O",["~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$js/reagent.ratom.debug","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/ifn?","~$js/reagent.ratom.-running","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$reagent.ratom/arr-len","~$cljs.core/apply","~$js/reagent.ratom.generation","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.debug/has-console","~$js/reagent","~$cljs.core/pr-str","~$reagent.ratom/RCursor","~$js/console","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$js/reagent.ratom.rea-queue","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$cljs.core/fn?","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$js/reagent.ratom","~$reagent.ratom/arr-eq","~$reagent.ratom/handle-reaction-change","~$goog.object/set","~$reagent.ratom/temp-reaction","~$reagent.debug/tracking","~$cljs.core/-remove-watch","~$cljs.core/missing-protocol","~$reagent.debug/track-console","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$reagent.ratom/RAtom","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$cljs.core/array","~$js/Error","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1X","reagent/impl/batching.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^1D","^1C","^H","^1@"]]],["^1X","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","~$goog.dom.HtmlElement"]]],["^1X","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","~$goog.array","~$goog.asserts"]]],["^1X","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4J","~$goog.labs.userAgent.util","^1B","~$goog.string.internal"]]],["^1X","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4M"]]],["^1X","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K"]]],["^1X","reagent/impl/util.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^1C","^H","~$clojure.string"]]],["^1X","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","reagent/ratom.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^1C","^1@","^H","^1E","^1F","^1B"]]],["^1X","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K"]]],"~:SHADOW-TIMESTAMP",[1608738513000,1608738513000,1561026596000],["^1X","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K","~$goog.reflect"]]],["^1X","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K","~$goog.html.trustedtypes","^4P","^4Q","^4R","^4S"]]],["^1X","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4J","^4K","~$goog.html.SafeUrl","^4R","^4S","^4M"]]],["^1X","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4X","^4O","~$goog.html.uncheckedconversions","^4R","^4M"]]],["^1X","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1X","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4J","^4K","~$goog.dom.TagName","~$goog.dom.tags","^50","^51","~$goog.html.SafeStyleSheet","^4X","^4O","^4W","^4P","^4Q","~$goog.labs.userAgent.browser","^1B","^4R","^4S","^4M"]]],["^1X","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^1B"]]],["^1X","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1X","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4J","^4K","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1X","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",[]]],["^1X","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4J","^1B"]]],["^1X","clojure/string.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^1C","^5;","~$goog.string.StringBuffer"]]],["^1X","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","~$goog.dom.safe","^52","^4R","^4M"]]],["^1X","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4M"]]],["^1X","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4J","^4K","^4Z","~$goog.math"]]],["^1X","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K","^4[","^50","^51","^57","^4X","^4O","^4R","^4M"]]],["^1X","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D"]]],["^1X","cljs/core.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","~$goog.math.Long","~$goog.math.Integer","^5;","^1B","^4J","~$goog.Uri","^5A"]]],["^1X","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K","^4W","^4R","^4S"]]],["^1X","reagent/debug.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^1C"]]],["^1X","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4J","^4K","^51","^1B","^4R","^4S","^4M"]]],["^1X","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4V"]]],["^1X","clojure/set.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^1C"]]],["^1X","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4J","^4K","^5;"]]],["^1X","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4E",["^ ","^4F",null,"^4G",["^O",[]],"^4H",["^1D","^4K","^4S"]]]]],"~:clj-info",["^ ","jar:file:/home/victor/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/debug.clj",1580720293000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1602861476000,"jar:file:/home/victor/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1561026614000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/ratom.clj",1580720293000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1602063594000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"~:shadow/protocol-prefixes",["^O",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^D",["^ ","^E","^F","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H","^M","^H"],"^N",["^O",["^P"]],"^Q",["^ ","^E",["^ ","^R",["^S",[["^T","~$&","^U"]]],"^7",36,"^8",1,"^6","reagent/ratom.clj","^V","^W","^X","^F","^Y",true],"^Z",["^ ","^R",["^S",[["~$&","^U"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^V","^[","^X","^F","^Y",true],"^10",["^ ","^R",["^S",[["^11","^12","^13"],["^11","^12","^14","~$&","^15"]]],"^7",28,"^8",1,"^6","reagent/ratom.clj","^V","^16","^X","^F","^Y",true],"^17",["^ ","^R",["^S",[["^11","^12"],["^11","^12","~$&","^18"]]],"^7",19,"^8",1,"^6","reagent/ratom.clj","^V","^19","^X","^F","^Y",true],"^1:",["^ ","^R",["^S",[["~$&","^U"]]],"^1;","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^V","^1<","^X","^F","^Y",true]],"~:shadow/js-access-properties",["^O",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^V","^F","^1>",null,"^1?",["^ ","^1@","^1@","^1A","^1B","^1C","^1C","^1D","^1D","^1B","^1B","^1E","^1E","^1F","^1F","^1G","^1@","~$s","^1F","^1H","^1E","^H","^H"],"^1I",["^O",["^1J","^1K"]],"~:shadow/js-access-global",["^O",["Error"]],"^1L",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",104,"^8",8,"^9",104,"^:",15,"~:private",true,"^R",["^S",["~$quote",["^S",[["~$a","~$writer","~$opts","~$s"]]]]]],"^6>",true,"^V","^4B","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^S",[["~$a","^6@","^6A","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"~:variadic?",false,"^7",104,"~:ret-tag","~$any","^9",104,"~:max-fixed-arity",4,"~:fn-var",true,"^R",["^S",["^6?",["^S",[["~$a","^6@","^6A","~$s"]]]]]],"~$->RCursor",["^ ","^6=",null,"^5",["^ ","~:protocols",["^O",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^34","^3Y","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",256,"^9",256,"^R",["^S",["^6?",["^S",[["~$ratom","~$path","^Z","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^3Y","^6S"]],"^1;","Positional factory function for reagent.ratom/RCursor."],"^6K",["^O",["^6L","^6M","^6N","^6O","^6P","^6Q","^6R","^34","^3Y","^6S"]],"^V","^4@","^6","reagent/ratom.cljs","^:",17,"^6B",["^S",[["^6V","^6W","^Z","^6X","^6Y"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^6T","^6U","^7",256,"^6F","^2[","^9",256,"^6H",5,"^6I",true,"^R",["^S",["^6?",["^S",[["^6V","^6W","^Z","^6X","^6Y"]]]]],"^6Z",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^3Y","^6S"]],"^1;","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",62,"^8",8,"^9",62,"^:",29,"^6>",true,"^R",["^S",["^6?",["^S",[["~$derefed"]]]]],"^1;","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^6>",true,"^V","^2P","^6","reagent/ratom.cljs","^:",29,"^6B",["^S",[["^70"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",62,"^6F",["^O",[null,"^6G","~$clj-nil"]],"^9",62,"^6H",1,"^6I",true,"^R",["^S",["^6?",["^S",[["^70"]]]]],"^1;","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",114,"^8",8,"^9",114,"^:",19,"^6>",true,"^R",["^S",["^6?",["^S",[["~$r"]]]]]],"^6>",true,"^V","^2W","^6","reagent/ratom.cljs","^:",19,"^6B",["^S",[["~$r"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",114,"^6F","^6G","^9",114,"^6H",1,"^6I",true,"^R",["^S",["^6?",["^S",[["~$r"]]]]]],"~$in-context",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",36,"^8",8,"^9",36,"^:",18,"^6>",true,"^R",["^S",["^6?",["^S",[["^1A","~$f"]]]]]],"^6>",true,"^V","^4=","^6","reagent/ratom.cljs","^:",18,"^6B",["^S",[["^1A","~$f"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",36,"^9",36,"^6H",2,"^6I",true,"^R",["^S",["^6?",["^S",[["^1A","~$f"]]]]]],"~$make-track",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",236,"^8",7,"^9",236,"^:",17,"^R",["^S",["^6?",["^S",[["~$f","~$args"]]]]]],"^V","^40","^6","reagent/ratom.cljs","^:",17,"^6B",["^S",[["~$f","^75"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",236,"^6F","^3X","^9",236,"^6H",2,"^6I",true,"^R",["^S",["^6?",["^S",[["~$f","^75"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^6K",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^34","~$cljs.core/IMeta","^3Y","^6S","~$cljs.core/IWithMeta"]],"^V","^46","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",136,"~:record",false,"^9",136,"~:tag","~$function","^6Z",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^78","^3Y","^6S","^79"]]],"^P",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",181,"^8",7,"^9",181,"^:",11,"^R",["^S",["^6?",["^S",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^1;","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^6E",true,"~:fixed-arity",1,"^6H",1,"^6B",["^S",[["~$x"]]],"^R",["^S",[["~$x"],["~$x","~$&",["^ ","^7>",["^7?","^7@"]]]]],"^6D",["^S",[null,null]]]],"^V","^48","^6","reagent/ratom.cljs","^:",11,"^7A",["^ ","^6E",true,"^7B",1,"^6H",1,"^6B",["^S",[["~$x"]]],"^R",["^S",[["~$x"],["~$x","~$&",["^ ","^7>",["^7?","^7@"]]]]],"^6D",["^S",[null,null]]],"^6B",["^S",[["~$x"]]],"^6C",null,"^7B",1,"^6D",["^S",[null,null]],"^8",1,"^6E",true,"~:methods",[["^ ","^7B",1,"^6E",false,"^7<","^46"],["^ ","^7B",1,"^6E",true,"^7<","^46"]],"^7",181,"^9",181,"^6H",1,"^6I",true,"^R",["^S",[["~$x"],["~$x","~$&",["^ ","^7>",["^7?","^7@"]]]]],"^1;","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",88,"^8",8,"^9",88,"^:",16,"^6>",true,"^R",["^S",["^6?",["^S",[["~$this","~$old","~$new"]]]]]],"^6>",true,"^V","^3B","^6","reagent/ratom.cljs","^:",16,"^6B",["^S",[["^7E","^7F","^7G"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",88,"^6F","^71","^9",88,"^6H",3,"^6I",true,"^R",["^S",["^6?",["^S",[["^7E","^7F","^7G"]]]]]],"~$->Reaction",["^ ","^6=",null,"^5",["^ ","^6K",["^O",["^6L","^6M","^6N","^6O","^6P","^6Q","^6R","^34","^3A","^3V","^3Y","^6S"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^6T","^6U","^7",364,"^9",364,"^R",["^S",["^6?",["^S",[["~$f","^6X","~$dirty?","~$nocache?","~$watching","^6Y","~$auto-run","~$caught"]]]]],"^6Z",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^3Y","^6S"]],"^1;","Positional factory function for reagent.ratom/Reaction."],"^6K",["^O",["^6L","^6M","^6N","^6O","^6P","^6Q","^6R","^34","^3A","^3V","^3Y","^6S"]],"^V","^3>","^6","reagent/ratom.cljs","^:",18,"^6B",["^S",[["~$f","^6X","^7I","^7J","^7K","^6Y","^7L","^7M"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^6T","^6U","^7",364,"^6F","^45","^9",364,"^6H",8,"^6I",true,"^R",["^S",["^6?",["^S",[["~$f","^6X","^7I","^7J","^7K","^6Y","^7L","^7M"]]]]],"^6Z",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^3Y","^6S"]],"^1;","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",600,"^8",7,"^9",600,"^:",19,"^R",["^S",["^6?",["^S",[["~$value","~$callback-fn","^75"]]]]]],"^V","^31","^6","reagent/ratom.cljs","^:",19,"^6B",["^S",[["^7O","^7P","^75"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",600,"^6F","^39","^9",600,"^6H",3,"^6I",true,"^R",["^S",["^6?",["^S",[["^7O","^7P","^75"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",134,"^8",14,"^9",134,"^:",27,"~:protocol-symbol",true,"~:jsdoc",["^S",["@interface"]],"~:protocol-info",["^ ","^7C",["^ "]]],"^7R",true,"^V","^34","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",134,"^7T",["^ ","^7C",["^ "]],"~:info",null,"^9",134,"^7<","^6G","~:impls",["^O",["^2[","^3X","^45","^46"]],"^7S",["^S",["@interface"]]],"~$track",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",246,"^8",7,"^9",246,"^:",12,"^R",["^S",["^6?",["^S",[["~$f","~$&","^75"]]]]],"^7A",["^ ","^6E",true,"^7B",1,"^6H",1,"^6B",[["^S",["~$f","^75"]]],"^R",["^S",[["~$f","~$&","^75"]]],"^6D",["^S",[null]]]],"^V","^35","^6","reagent/ratom.cljs","^:",12,"^7A",["^ ","^6E",true,"^7B",1,"^6H",1,"^6B",[["^S",["~$f","^75"]]],"^R",["^S",[["~$f","~$&","^75"]]],"^6D",["^S",[null]]],"^6B",[["^S",["~$f","^75"]]],"^6C",null,"^7B",1,"^6D",["^S",[null]],"^8",1,"^6E",true,"^7C",[["^ ","^7B",1,"^6E",true,"^7<","^3X"]],"^7",246,"^6F","^6G","^9",246,"^6H",1,"^6I",true,"^R",["^S",[["~$f","~$&","^75"]]]],"~$dispose!",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",346,"^8",4,"^9",346,"^:",12,"~:protocol","^3V","^1;",null,"^R",["^S",["^6?",["^S",[["^7E"]]]]]],"^7Y","^3V","^V","^3<","^6","reagent/ratom.cljs","^:",12,"^6B",["^S",[["^7E"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",345,"^6F","^6G","^9",346,"^6H",1,"^6I",true,"^R",["^S",["^6?",["^S",[["^7E"]]]]],"^1;",null],"~$arr-eq",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",27,"^8",17,"^9",27,"^:",23,"^7<","~$boolean","^6>",true,"^R",["^S",["^6?",["^S",[["~$x","~$y"]]]]]],"^6>",true,"^V","^3I","^6","reagent/ratom.cljs","^:",23,"^6B",["^S",[["~$x","~$y"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",27,"^6F","^7[","^9",27,"^6H",2,"^7<","^7[","^6I",true,"^R",["^S",["^6?",["^S",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",352,"^8",8,"^9",352,"^:",30,"^6>",true,"^R",["^S",["^6?",["^S",[["^7E","~$sender","^7F","^7G"]]]]]],"^6>",true,"^V","^3J","^6","reagent/ratom.cljs","^:",30,"^6B",["^S",[["^7E","^81","^7F","^7G"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",352,"^6F","^6G","^9",352,"^6H",4,"^6I",true,"^R",["^S",["^6?",["^S",[["^7E","^81","^7F","^7G"]]]]]],"~$run",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",350,"^8",4,"^9",350,"^:",7,"^7Y","^3A","^1;",null,"^R",["^S",["^6?",["^S",[["^7E"]]]]]],"^7Y","^3A","^V","^2<","^6","reagent/ratom.cljs","^:",7,"^6B",["^S",[["^7E"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",349,"^6F","^6G","^9",350,"^6H",1,"^6I",true,"^R",["^S",["^6?",["^S",[["^7E"]]]]],"^1;",null],"~$add-on-dispose!",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",347,"^8",4,"^9",347,"^:",19,"^7Y","^3V","^1;",null,"^R",["^S",["^6?",["^S",[["^7E","~$f"]]]]]],"^7Y","^3V","^V","^3E","^6","reagent/ratom.cljs","^:",19,"^6B",["^S",[["^7E","~$f"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",345,"^6F","^6G","^9",347,"^6H",2,"^6I",true,"^R",["^S",["^6?",["^S",[["^7E","~$f"]]]]],"^1;",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",523,"^8",16,"^9",523,"^:",29,"^6>",true],"^6>",true,"^V","^3L","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",523,"^9",523,"^7<","^45"],"~$make-track!",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",239,"^8",7,"^9",239,"^:",18,"^R",["^S",["^6?",["^S",[["~$f","^75"]]]]]],"^V","^2;","^6","reagent/ratom.cljs","^:",18,"^6B",["^S",[["~$f","^75"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",239,"^6F","^6G","^9",239,"^6H",2,"^6I",true,"^R",["^S",["^6?",["^S",[["~$f","^75"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",30,"^6>",true],"^6>",true,"^V","^2:","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",12,"^9",12,"^7<","~$number"],"~$run-in-reaction",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",526,"^8",7,"^9",526,"^:",22,"^R",["^S",["^6?",["^S",[["~$f","^1A","~$key","^82","^6A"]]]]],"^1;","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^V","^3Q","^6","reagent/ratom.cljs","^:",22,"^6B",["^S",[["~$f","^1A","^89","^82","^6A"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",526,"^6F","^6G","^9",526,"^6H",5,"^6I",true,"^R",["^S",["^6?",["^S",[["~$f","^1A","^89","^82","^6A"]]]]],"^1;","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",345,"^8",14,"^9",345,"^:",25,"^7R",true,"^7S",["^S",["@interface"]],"^7T",["^ ","^7C",["^ ","^7X",[["^7E"]],"^83",[["^7E","~$f"]]]]],"^7R",true,"^V","^3V","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",345,"^7T",["^ ","^7C",["^ ","^7X",[["^7E"]],"^83",[["^7E","~$f"]]]],"^7U",null,"^9",345,"^7<","^6G","^7V",["^O",["^45"]],"^7S",["^S",["@interface"]]],"~$check-watches",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",73,"^8",8,"^9",73,"^:",21,"^6>",true,"^R",["^S",["^6?",["^S",[["^7F","^7G"]]]]]],"^6>",true,"^V","^2R","^6","reagent/ratom.cljs","^:",21,"^6B",["^S",[["^7F","^7G"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",73,"^9",73,"^6H",2,"^6I",true,"^R",["^S",["^6?",["^S",[["^7F","^7G"]]]]]],"~$with-let-destroy",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",332,"^8",7,"^9",332,"^:",23,"^R",["^S",["^6?",["^S",[["~$v"]]]]]],"^V","^2S","^6","reagent/ratom.cljs","^:",23,"^6B",["^S",[["~$v"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",332,"^6F",["^O",["^6G","^71"]],"^9",332,"^6H",1,"^6I",true,"^R",["^S",["^6?",["^S",[["~$v"]]]]]],"~$make-reaction",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",514,"^8",7,"^9",514,"^:",20,"^R",["^S",["^6?",["^S",[["~$f","~$&",["^ ","^7>",["^7L","~$on-set","~$on-dispose"]]]]]]],"^7A",["^ ","^6E",true,"^7B",1,"^6H",1,"^6B",[["^S",["~$f",["^ ","^7>",["^7L","^8>","^8?"]]]]],"^R",["^S",[["~$f","~$&",["^ ","^7>",["^7L","^8>","^8?"]]]]],"^6D",["^S",[null]]]],"^V","^3@","^6","reagent/ratom.cljs","^:",20,"^7A",["^ ","^6E",true,"^7B",1,"^6H",1,"^6B",[["^S",["~$f",["^ ","^7>",["^7L","^8>","^8?"]]]]],"^R",["^S",[["~$f","~$&",["^ ","^7>",["^7L","^8>","^8?"]]]]],"^6D",["^S",[null]]],"^6B",[["^S",["~$f",["^ ","^7>",["^7L","^8>","^8?"]]]]],"^6C",null,"^7B",1,"^6D",["^S",[null]],"^8",1,"^6E",true,"^7C",[["^ ","^7B",1,"^6E",true,"^7<","^45"]],"^7",514,"^6F","^6G","^9",514,"^6H",1,"^6I",true,"^R",["^S",[["~$f","~$&",["^ ","^7>",["^7L","^8>","^8?"]]]]]],"~$add-w",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",78,"^8",8,"^9",78,"^:",13,"^6>",true,"^R",["^S",["^6?",["^S",[["^7E","^89","~$f"]]]]]],"^6>",true,"^V","^41","^6","reagent/ratom.cljs","^:",13,"^6B",["^S",[["^7E","^89","~$f"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",78,"^9",78,"^6H",3,"^6I",true,"^R",["^S",["^6?",["^S",[["^7E","^89","~$f"]]]]]],"~$Reaction",["^ ","^77",8,"^6K",["^O",["^6L","^6M","^6N","^6O","^6P","^6Q","^6R","^34","^3A","^3V","^3Y","^6S"]],"^V","^45","^6","reagent/ratom.cljs","^:",18,"^7:",true,"^8",10,"^7",364,"^7;",false,"^9",364,"^7<","^7=","^6Z",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^3Y","^6S"]]],"~$flush!",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",120,"^8",7,"^9",120,"^:",13,"^R",["^S",["^6?",["^S",[[]]]]]],"^V","^2O","^6","reagent/ratom.cljs","^:",13,"^6B",["^S",[[]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",120,"^6F","^71","^9",120,"^6H",0,"^6I",true,"^R",["^S",["^6?",["^S",[[]]]]]],"~$RCursor",["^ ","^77",5,"^6K",["^O",["^6L","^6M","^6N","^6O","^6P","^6Q","^6R","^34","^3Y","^6S"]],"^V","^2[","^6","reagent/ratom.cljs","^:",17,"^7:",true,"^8",10,"^7",256,"^7;",false,"^9",256,"^7<","^7=","^6Z",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^3Y","^6S"]]],"~$cached-reaction",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",191,"^8",8,"^9",191,"^:",23,"^6>",true,"^R",["^S",["^6?",["^S",[["~$f","~$o","~$k","^1A","~$destroy"]]]]]],"^6>",true,"^V","^38","^6","reagent/ratom.cljs","^:",23,"^6B",["^S",[["~$f","~$o","~$k","^1A","^8E"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",191,"^6F","^6G","^9",191,"^6H",5,"^6I",true,"^R",["^S",["^6?",["^S",[["~$f","~$o","~$k","^1A","^8E"]]]]]],"~$Track",["^ ","^77",3,"^6K",["^O",["^6N","^6O","^34","^3Y","^6S"]],"^V","^3X","^6","reagent/ratom.cljs","^:",15,"^7:",true,"^8",10,"^7",215,"^7;",false,"^9",215,"^7<","^7=","^6Z",["^O",["^6N","^6O","^3Y","^6S"]]],"~$debug",["^ ","^V","^2V","^6","reagent/ratom.cljs","^7",11,"^8",1,"^9",11,"^:",24,"^7<","^7[","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",19,"^9",11,"^:",24,"^7<","^7["]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",20,"^9",13,"^:",28,"^6>",true],"^6>",true,"^V","^44","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",13,"^9",13,"^7<","~$cljs.core/Atom"],"~$cursor",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",318,"^8",7,"^9",318,"^:",13,"^R",["^S",["^6?",["^S",[["~$src","^6W"]]]]]],"^V","^3Z","^6","reagent/ratom.cljs","^:",13,"^6B",["^S",[["^8K","^6W"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",318,"^6F","^2[","^9",318,"^6H",2,"^6I",true,"^R",["^S",["^6?",["^S",[["^8K","^6W"]]]]]],"~$Wrapper",["^ ","^77",4,"^6K",["^O",["^6L","^6M","^6N","^6Q","^6R","^3Y","^6S"]],"^V","^39","^6","reagent/ratom.cljs","^:",17,"^7:",true,"^8",10,"^7",553,"^7;",false,"^9",553,"^7<","^7=","^6Z",["^O",["^6L","^6M","^6N","^6Q","^6R","^3Y","^6S"]]],"~$running",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",21,"^8",7,"^9",21,"^:",14,"^R",["^S",["^6?",["^S",[[]]]]]],"^V","^3?","^6","reagent/ratom.cljs","^:",14,"^6B",["^S",[[]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",21,"^6F","^6G","^9",21,"^6H",0,"^6I",true,"^R",["^S",["^6?",["^S",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",349,"^8",14,"^9",349,"^:",23,"^7R",true,"^7S",["^S",["@interface"]],"^7T",["^ ","^7C",["^ ","^82",[["^7E"]]]]],"^7R",true,"^V","^3A","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",349,"^7T",["^ ","^7C",["^ ","^82",[["^7E"]]]],"^7U",null,"^9",349,"^7<","^6G","^7V",["^O",["^45"]],"^7S",["^S",["@interface"]]],"~$reactive?",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",16,"^9",15,"^:",25,"^7<","^7[","^R",["^S",["^6?",["^S",[[]]]]]],"^V","^47","^6","reagent/ratom.cljs","^:",25,"^6B",["^S",[[]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",15,"^6F","^7[","^9",15,"^6H",0,"^7<","^7[","^6I",true,"^R",["^S",["^6?",["^S",[[]]]]]],"~$deref-capture",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",43,"^8",8,"^9",43,"^:",21,"^6>",true,"^R",["^S",["^6?",["^S",[["~$f","~$r"]]]]],"^1;","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs."],"^6>",true,"^V","^49","^6","reagent/ratom.cljs","^:",21,"^6B",["^S",[["~$f","~$r"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",43,"^6F","^6G","^9",43,"^6H",2,"^6I",true,"^R",["^S",["^6?",["^S",[["~$f","~$r"]]]]],"^1;","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n   `deref`ed atoms captured during `in-context`, if any differ from the\n   `watching` field of r.  Clears the `dirty?` flag on r.\n\n   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n   the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",112,"^8",20,"^9",112,"^:",29,"^6>",true],"^6>",true,"^V","^3D","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",112,"^9",112,"^7<","^71"],"~$with-let-values",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",336,"^8",7,"^9",336,"^:",22,"^R",["^S",["^6?",["^S",[["^89"]]]]]],"^V","^4>","^6","reagent/ratom.cljs","^:",22,"^6B",["^S",[["^89"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",336,"^6F",["^O",["^6G","^11"]],"^9",336,"^6H",1,"^6I",true,"^R",["^S",["^6?",["^S",[["^89"]]]]]],"~$track!",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",250,"^8",7,"^9",250,"^:",13,"^R",["^S",["^6?",["^S",[["~$f","~$&","^75"]]]]],"^7A",["^ ","^6E",true,"^7B",1,"^6H",1,"^6B",[["^S",["~$f","^75"]]],"^R",["^S",[["~$f","~$&","^75"]]],"^6D",["^S",[null]]]],"^V","^3;","^6","reagent/ratom.cljs","^:",13,"^7A",["^ ","^6E",true,"^7B",1,"^6H",1,"^6B",[["^S",["~$f","^75"]]],"^R",["^S",[["~$f","~$&","^75"]]],"^6D",["^S",[null]]],"^6B",[["^S",["~$f","^75"]]],"^6C",null,"^7B",1,"^6D",["^S",[null]],"^8",1,"^6E",true,"^7C",[["^ ","^7B",1,"^6E",true,"^7<","^6G"]],"^7",250,"^6F","^6G","^9",250,"^6H",1,"^6I",true,"^R",["^S",[["~$f","~$&","^75"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",20,"^9",10,"^:",35,"~:dynamic",true,"~:declared",true],"^V","^3U","^6","reagent/ratom.cljs","^:",35,"^8",1,"^8U",true,"^7",10,"^8V",true,"^9",10],"~$check-derefs",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",545,"^8",7,"^9",545,"^:",19,"^R",["^S",["^6?",["^S",[["~$f"]]]]]],"^V","^29","^6","reagent/ratom.cljs","^:",19,"^6B",["^S",[["~$f"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",545,"^6F","~$cljs.core/IVector","^9",545,"^6H",1,"^6I",true,"^R",["^S",["^6?",["^S",[["~$f"]]]]]],"~$remove-w",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",83,"^8",8,"^9",83,"^:",16,"^6>",true,"^R",["^S",["^6?",["^S",[["^7E","^89"]]]]]],"^6>",true,"^V","^2=","^6","reagent/ratom.cljs","^:",16,"^6B",["^S",[["^7E","^89"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",83,"^9",83,"^6H",2,"^6I",true,"^R",["^S",["^6?",["^S",[["^7E","^89"]]]]]],"~$->Wrapper",["^ ","^6=",null,"^5",["^ ","^6K",["^O",["^6L","^6M","^6N","^6Q","^6R","^3Y","^6S"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^6T","^6U","^7",553,"^9",553,"^R",["^S",["^6?",["^S",[["^6X","~$callback","~$changed","^6Y"]]]]],"^6Z",["^O",["^6L","^6M","^6N","^6Q","^6R","^3Y","^6S"]],"^1;","Positional factory function for reagent.ratom/Wrapper."],"^6K",["^O",["^6L","^6M","^6N","^6Q","^6R","^3Y","^6S"]],"^V","^3W","^6","reagent/ratom.cljs","^:",17,"^6B",["^S",[["^6X","^8[","^90","^6Y"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^6T","^6U","^7",553,"^6F","^39","^9",553,"^6H",4,"^6I",true,"^R",["^S",["^6?",["^S",[["^6X","^8[","^90","^6Y"]]]]],"^6Z",["^O",["^6L","^6M","^6N","^6Q","^6R","^3Y","^6S"]],"^1;","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^6=",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",24,"^8",16,"^9",24,"^:",23,"^7<","^87","^6>",true,"^R",["^S",["^6?",["^S",[["~$x"]]]]]],"^6>",true,"^V","^2K","^6","reagent/ratom.cljs","^:",23,"^6B",["^S",[["~$x"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^7",24,"^6F","^87","^9",24,"^6H",1,"^7<","^87","^6I",true,"^R",["^S",["^6?",["^S",[["~$x"]]]]]],"~$->RAtom",["^ ","^6=",null,"^5",["^ ","^6K",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^34","^78","^3Y","^6S","^79"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6T","^6U","^7",136,"^9",136,"^R",["^S",["^6?",["^S",[["^6X","^7?","^7@","^6Y"]]]]],"^6Z",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^78","^3Y","^6S","^79"]],"^1;","Positional factory function for reagent.ratom/RAtom."],"^6K",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^34","^78","^3Y","^6S","^79"]],"^V","^2C","^6","reagent/ratom.cljs","^:",15,"^6B",["^S",[["^6X","^7?","^7@","^6Y"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^6T","^6U","^7",136,"^6F","^46","^9",136,"^6H",4,"^6I",true,"^R",["^S",["^6?",["^S",[["^6X","^7?","^7@","^6Y"]]]]],"^6Z",["^O",["^6L","^6M","^6N","^6O","^6Q","^6R","^78","^3Y","^6S","^79"]],"^1;","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^6=",null,"^5",["^ ","^6K",["^O",["^6N","^6O","^34","^3Y","^6S"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6T","^6U","^7",215,"^9",215,"^R",["^S",["^6?",["^S",[["~$f","^75","^Z"]]]]],"^6Z",["^O",["^6N","^6O","^3Y","^6S"]],"^1;","Positional factory function for reagent.ratom/Track."],"^6K",["^O",["^6N","^6O","^34","^3Y","^6S"]],"^V","^3R","^6","reagent/ratom.cljs","^:",15,"^6B",["^S",[["~$f","^75","^Z"]]],"^6C",null,"^6D",["^S",[null,null]],"^8",1,"^6E",false,"^6T","^6U","^7",215,"^6F","^3X","^9",215,"^6H",3,"^6I",true,"^R",["^S",["^6?",["^S",[["~$f","^75","^Z"]]]]],"^6Z",["^O",["^6N","^6O","^3Y","^6S"]],"^1;","Positional factory function for reagent.ratom/Track."]],"^1K",["^ ","^F","^F","^H","^H","^1C","^1C"],"~:cljs.analyzer/constants",["^ ","^1I",["^O",["~:on-set","^7M","^7K","^7[","^Z","^8[","^5","~:else","^6W","^75","~:validator","^6Y","^7?","^7@","^7I","~:no-cache","^6V","^6X","~:auto-run","~:on-dispose","^7<","~:mutable","^90","^7L","^7J","~$f"]],"~:order",["^6X","^9;","^7?","^7@","^6Y","^5","^97","^96","^9:","~$f","^75","^Z","^99","^6V","^6W","^95","^98","^7I","^7<","^7[","^7J","^7K","^7L","^7M","^8[","^90"]],"^1T",["^ ","^1K",["^O",[]],"^1J",["^O",[]]],"^1U",["^ "],"^1V",["^1D","^1C","^1@","^H","^1E","^1F","^1B"]],"^X","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^O",[]],"~:compiler-options",["^4D",[["^9?","~:static-fns"],true,["^9?","~:shadow-tweaks"],null,["^9?","~:source-map-inline"],null,["^9?","~:elide-asserts"],false,["^9?","~:optimize-constants"],null,["^9?","^1["],null,["^9?","~:external-config"],null,["^9?","~:tooling-config"],null,["^9?","~:emit-constants"],null,["^9?","~:load-tests"],null,["^9?","~:form-size-threshold"],null,["^9?","~:data-readers"],null,["^9?","~:infer-externs"],"~:auto",["^9?","^21"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^9?","~:fn-invoke-direct"],null,["^9?","~:source-map"],"/dev/null"]]]