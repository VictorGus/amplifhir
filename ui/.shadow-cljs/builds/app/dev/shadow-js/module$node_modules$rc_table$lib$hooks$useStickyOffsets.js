["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-table/lib/hooks/useStickyOffsets.js"],"~:js","shadow$provide.module$node_modules$rc_table$lib$hooks$useStickyOffsets=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=void 0;var _react=require(\"module$node_modules$react$index\");exports.default=function(colWidths,columnCount,direction){return(0,_react.useMemo)(function(){for(var leftOffsets=[],rightOffsets=[],left=0,right=0,start=0;start<columnCount;start+=1)if(\"rtl\"===direction){rightOffsets[start]=right;right+=colWidths[start]||0;\nvar end=columnCount-start-1;leftOffsets[end]=left;left+=colWidths[end]||0}else leftOffsets[start]=left,left+=colWidths[start]||0,end=columnCount-start-1,rightOffsets[end]=right,right+=colWidths[end]||0;return{left:leftOffsets,right:rightOffsets}},[colWidths,columnCount,direction])}}","~:source","shadow$provide[\"module$node_modules$rc_table$lib$hooks$useStickyOffsets\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\n/**\n * Get sticky column offset width\n */\nfunction useStickyOffsets(colWidths, columnCount, direction) {\n  var stickyOffsets = (0, _react.useMemo)(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0; // Right offset\n\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0; // Right offset\n\n        var _end = columnCount - start - 1;\n\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  }, [colWidths, columnCount, direction]);\n  return stickyOffsets;\n}\n\nvar _default = useStickyOffsets;\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["right","__esModule","value","default","left"]],"~:compiled-at",1619101949935,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_table$lib$hooks$useStickyOffsets.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,uDAAf,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,OAAR,CAAkB,IAAK,EAEvB,KAAIC,OAASP,OAAA,CAAQ,iCAAR,CA0CbE,QAAA,CAAQI,OAAR,CArCAE,QAAyB,CAACC,SAAD,CAAYC,WAAZ,CAAyBC,SAAzB,CAAoC,CAiC3D,MAhCoBC,CAAC,CAAA,CAAGL,MAAH,CAAUM,OAAXD,EAAoB,QAAS,EAAG,CAMlD,IALA,IAAIE,YAAc,EAAlB,CACIC,aAAe,EADnB,CAEIC,KAAO,CAFX,CAGIC,MAAQ,CAHZ,CAKSC,MAAQ,CAAjB,CAAoBA,KAApB,CAA4BR,WAA5B,CAAyCQ,KAAzC,EAAkD,CAAlD,CACE,GAAkB,KAAlB,GAAIP,SAAJ,CAAyB,CAEvBI,YAAA,CAAaG,KAAb,CAAA,CAAsBD,KACtBA,MAAA,EAASR,SAAA,CAAUS,KAAV,CAAT,EAA6B,CAE7B;IAAIC,IAAMT,WAANS,CAAoBD,KAApBC,CAA4B,CAChCL,YAAA,CAAYK,GAAZ,CAAA,CAAmBH,IACnBA,KAAA,EAAQP,SAAA,CAAUU,GAAV,CAAR,EAA0B,CAPH,CAAzB,IAUEL,YAAA,CAAYI,KAAZ,CAMA,CANqBF,IAMrB,CALAA,IAKA,EALQP,SAAA,CAAUS,KAAV,CAKR,EAL4B,CAK5B,CAHIE,GAGJ,CAHWV,WAGX,CAHyBQ,KAGzB,CAHiC,CAGjC,CADAH,YAAA,CAAaK,GAAb,CACA,CADqBH,KACrB,CAAAA,KAAA,EAASR,SAAA,CAAUW,GAAV,CAAT,EAA4B,CAIhC,OAAO,CACLJ,KAAMF,WADD,CAELG,MAAOF,YAFF,CA3B2C,CAAhCH,CA+BjB,CAACH,SAAD,CAAYC,WAAZ,CAAyBC,SAAzB,CA/BiBC,CADuC,CAbuD;\",\n\"sources\":[\"node_modules/rc-table/lib/hooks/useStickyOffsets.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_table$lib$hooks$useStickyOffsets\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _react = require(\\\"react\\\");\\n\\n/**\\n * Get sticky column offset width\\n */\\nfunction useStickyOffsets(colWidths, columnCount, direction) {\\n  var stickyOffsets = (0, _react.useMemo)(function () {\\n    var leftOffsets = [];\\n    var rightOffsets = [];\\n    var left = 0;\\n    var right = 0;\\n\\n    for (var start = 0; start < columnCount; start += 1) {\\n      if (direction === 'rtl') {\\n        // Left offset\\n        rightOffsets[start] = right;\\n        right += colWidths[start] || 0; // Right offset\\n\\n        var end = columnCount - start - 1;\\n        leftOffsets[end] = left;\\n        left += colWidths[end] || 0;\\n      } else {\\n        // Left offset\\n        leftOffsets[start] = left;\\n        left += colWidths[start] || 0; // Right offset\\n\\n        var _end = columnCount - start - 1;\\n\\n        rightOffsets[_end] = right;\\n        right += colWidths[_end] || 0;\\n      }\\n    }\\n\\n    return {\\n      left: leftOffsets,\\n      right: rightOffsets\\n    };\\n  }, [colWidths, columnCount, direction]);\\n  return stickyOffsets;\\n}\\n\\nvar _default = useStickyOffsets;\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_react\",\"useStickyOffsets\",\"colWidths\",\"columnCount\",\"direction\",\"stickyOffsets\",\"useMemo\",\"leftOffsets\",\"rightOffsets\",\"left\",\"right\",\"start\",\"end\",\"_end\"]\n}\n"]