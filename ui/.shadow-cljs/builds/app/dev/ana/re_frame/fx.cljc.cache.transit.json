["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__45843 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__45844 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\nre_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__45844;\n\ntry{try{var seq__45846 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__45847 = null;\nvar count__45848 = (0);\nvar i__45849 = (0);\nwhile(true){\nif((i__45849 < count__45848)){\nvar vec__45860 = chunk__45847.cljs$core$IIndexed$_nth$arity$2(null,i__45849);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45860,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45860,(1),null);\nvar temp__5718__auto___45923 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___45923)){\nvar effect_fn_45924 = temp__5718__auto___45923;\n(effect_fn_45924.cljs$core$IFn$_invoke$arity$1 ? effect_fn_45924.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_45924.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__45925 = seq__45846;\nvar G__45926 = chunk__45847;\nvar G__45927 = count__45848;\nvar G__45928 = (i__45849 + (1));\nseq__45846 = G__45925;\nchunk__45847 = G__45926;\ncount__45848 = G__45927;\ni__45849 = G__45928;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__45846);\nif(temp__5720__auto__){\nvar seq__45846__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__45846__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__45846__$1);\nvar G__45929 = cljs.core.chunk_rest(seq__45846__$1);\nvar G__45930 = c__4550__auto__;\nvar G__45931 = cljs.core.count(c__4550__auto__);\nvar G__45932 = (0);\nseq__45846 = G__45929;\nchunk__45847 = G__45930;\ncount__45848 = G__45931;\ni__45849 = G__45932;\ncontinue;\n} else {\nvar vec__45863 = cljs.core.first(seq__45846__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45863,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45863,(1),null);\nvar temp__5718__auto___45933 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___45933)){\nvar effect_fn_45934 = temp__5718__auto___45933;\n(effect_fn_45934.cljs$core$IFn$_invoke$arity$1 ? effect_fn_45934.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_45934.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__45935 = cljs.core.next(seq__45846__$1);\nvar G__45936 = null;\nvar G__45937 = (0);\nvar G__45938 = (0);\nseq__45846 = G__45935;\nchunk__45847 = G__45936;\ncount__45848 = G__45937;\ni__45849 = G__45938;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__45595__auto___45939 = re_frame.interop.now();\nvar duration__45596__auto___45940 = (end__45595__auto___45939 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__45596__auto___45940,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__45595__auto___45939);\n} else {\n}\n}}finally {re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__45843;\n}} else {\nvar seq__45866 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__45867 = null;\nvar count__45868 = (0);\nvar i__45869 = (0);\nwhile(true){\nif((i__45869 < count__45868)){\nvar vec__45880 = chunk__45867.cljs$core$IIndexed$_nth$arity$2(null,i__45869);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45880,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45880,(1),null);\nvar temp__5718__auto___45943 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___45943)){\nvar effect_fn_45944 = temp__5718__auto___45943;\n(effect_fn_45944.cljs$core$IFn$_invoke$arity$1 ? effect_fn_45944.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_45944.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__45946 = seq__45866;\nvar G__45947 = chunk__45867;\nvar G__45948 = count__45868;\nvar G__45949 = (i__45869 + (1));\nseq__45866 = G__45946;\nchunk__45867 = G__45947;\ncount__45868 = G__45948;\ni__45869 = G__45949;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__45866);\nif(temp__5720__auto__){\nvar seq__45866__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__45866__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__45866__$1);\nvar G__45951 = cljs.core.chunk_rest(seq__45866__$1);\nvar G__45952 = c__4550__auto__;\nvar G__45953 = cljs.core.count(c__4550__auto__);\nvar G__45954 = (0);\nseq__45866 = G__45951;\nchunk__45867 = G__45952;\ncount__45868 = G__45953;\ni__45869 = G__45954;\ncontinue;\n} else {\nvar vec__45885 = cljs.core.first(seq__45866__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45885,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45885,(1),null);\nvar temp__5718__auto___45957 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___45957)){\nvar effect_fn_45958 = temp__5718__auto___45957;\n(effect_fn_45958.cljs$core$IFn$_invoke$arity$1 ? effect_fn_45958.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_45958.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__45959 = cljs.core.next(seq__45866__$1);\nvar G__45960 = null;\nvar G__45961 = (0);\nvar G__45962 = (0);\nseq__45866 = G__45959;\nchunk__45867 = G__45960;\ncount__45868 = G__45961;\ni__45869 = G__45962;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__45888 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__45889 = null;\nvar count__45890 = (0);\nvar i__45891 = (0);\nwhile(true){\nif((i__45891 < count__45890)){\nvar map__45896 = chunk__45889.cljs$core$IIndexed$_nth$arity$2(null,i__45891);\nvar map__45896__$1 = (((((!((map__45896 == null))))?(((((map__45896.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45896.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45896):map__45896);\nvar effect = map__45896__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45896__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45896__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__45888,chunk__45889,count__45890,i__45891,map__45896,map__45896__$1,effect,ms,dispatch){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__45888,chunk__45889,count__45890,i__45891,map__45896,map__45896__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__45963 = seq__45888;\nvar G__45964 = chunk__45889;\nvar G__45965 = count__45890;\nvar G__45966 = (i__45891 + (1));\nseq__45888 = G__45963;\nchunk__45889 = G__45964;\ncount__45890 = G__45965;\ni__45891 = G__45966;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__45888);\nif(temp__5720__auto__){\nvar seq__45888__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__45888__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__45888__$1);\nvar G__45967 = cljs.core.chunk_rest(seq__45888__$1);\nvar G__45968 = c__4550__auto__;\nvar G__45969 = cljs.core.count(c__4550__auto__);\nvar G__45970 = (0);\nseq__45888 = G__45967;\nchunk__45889 = G__45968;\ncount__45890 = G__45969;\ni__45891 = G__45970;\ncontinue;\n} else {\nvar map__45902 = cljs.core.first(seq__45888__$1);\nvar map__45902__$1 = (((((!((map__45902 == null))))?(((((map__45902.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45902.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45902):map__45902);\nvar effect = map__45902__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45902__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45902__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__45888,chunk__45889,count__45890,i__45891,map__45902,map__45902__$1,effect,ms,dispatch,seq__45888__$1,temp__5720__auto__){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__45888,chunk__45889,count__45890,i__45891,map__45902,map__45902__$1,effect,ms,dispatch,seq__45888__$1,temp__5720__auto__))\n,ms);\n}\n\n\nvar G__45971 = cljs.core.next(seq__45888__$1);\nvar G__45972 = null;\nvar G__45973 = (0);\nvar G__45974 = (0);\nseq__45888 = G__45971;\nchunk__45889 = G__45972;\ncount__45890 = G__45973;\ni__45891 = G__45974;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__45905 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__45906 = null;\nvar count__45907 = (0);\nvar i__45908 = (0);\nwhile(true){\nif((i__45908 < count__45907)){\nvar event = chunk__45906.cljs$core$IIndexed$_nth$arity$2(null,i__45908);\nre_frame.router.dispatch(event);\n\n\nvar G__45978 = seq__45905;\nvar G__45979 = chunk__45906;\nvar G__45980 = count__45907;\nvar G__45981 = (i__45908 + (1));\nseq__45905 = G__45978;\nchunk__45906 = G__45979;\ncount__45907 = G__45980;\ni__45908 = G__45981;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__45905);\nif(temp__5720__auto__){\nvar seq__45905__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__45905__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__45905__$1);\nvar G__45982 = cljs.core.chunk_rest(seq__45905__$1);\nvar G__45983 = c__4550__auto__;\nvar G__45984 = cljs.core.count(c__4550__auto__);\nvar G__45985 = (0);\nseq__45905 = G__45982;\nchunk__45906 = G__45983;\ncount__45907 = G__45984;\ni__45908 = G__45985;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__45905__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__45988 = cljs.core.next(seq__45905__$1);\nvar G__45989 = null;\nvar G__45990 = (0);\nvar G__45991 = (0);\nseq__45905 = G__45988;\nchunk__45906 = G__45989;\ncount__45907 = G__45990;\ni__45908 = G__45991;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__45915 = cljs.core.seq(value);\nvar chunk__45916 = null;\nvar count__45917 = (0);\nvar i__45918 = (0);\nwhile(true){\nif((i__45918 < count__45917)){\nvar event = chunk__45916.cljs$core$IIndexed$_nth$arity$2(null,i__45918);\nclear_event(event);\n\n\nvar G__45992 = seq__45915;\nvar G__45993 = chunk__45916;\nvar G__45994 = count__45917;\nvar G__45995 = (i__45918 + (1));\nseq__45915 = G__45992;\nchunk__45916 = G__45993;\ncount__45917 = G__45994;\ni__45918 = G__45995;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__45915);\nif(temp__5720__auto__){\nvar seq__45915__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__45915__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__45915__$1);\nvar G__45998 = cljs.core.chunk_rest(seq__45915__$1);\nvar G__45999 = c__4550__auto__;\nvar G__46000 = cljs.core.count(c__4550__auto__);\nvar G__46001 = (0);\nseq__45915 = G__45998;\nchunk__45916 = G__45999;\ncount__45917 = G__46000;\ni__45918 = G__46001;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__45915__$1);\nclear_event(event);\n\n\nvar G__46002 = cljs.core.next(seq__45915__$1);\nvar G__46003 = null;\nvar G__46004 = (0);\nvar G__46005 = (0);\nseq__45915 = G__46002;\nchunk__45916 = G__46003;\ncount__45917 = G__46004;\ni__45918 = G__46005;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^M","~$re-frame.interceptor","^N","~$re-frame.events","^O","~$re-frame.trace","^P","~$re-frame.registrar","^Q","~$cljs.core","^R","~$goog","^S","~$router","~$re-frame.router","^U","^U","~$trace","^P","~$events","^O","~$re-frame.loggers","^X","~$re-frame.db","^Y"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$app-db","^Y","~$->interceptor","^N","~$set-timeout!","^M","~$get-handler","^Q","~$clear-handlers","^Q","~$register-handler","^Q","~$console","^X"],"~:require-macros",["^ ","^P","^P","^V","^P","^R","^R"],"~:form",["~#list",["~$ns","^H",["^1:",["^[",["^U","~:as","^T"],["^Y","~:refer",["^11"]],["^N","^1=",["^12"]],["^M","^1=",["^13"]],["^O","^1<","^W"],["^Q","^1=",["^14","^15","^16"]],["^X","^1=",["^17"]],["^P","^1<","^V","~:include-macros",true]]]]],"~:flags",["^ ","^[",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1619083332332,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__45843","re-frame.trace/*current-trace*","*current-trace*-temp-val__45844","re-frame.trace/start-trace","end__45595__auto__","re-frame.interop/now","duration__45596__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","seq__45846","cljs.core/seq","chunk__45847","count__45848","i__45849","vec__45860","cljs.core.nth","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__45863","cljs.core/first","cljs.core/next","seq__45866","chunk__45867","count__45868","i__45869","vec__45880","vec__45885","effect-key","effect-value","temp__5718__auto__","effect-fn","re_frame.registrar.get_handler","re_frame.loggers.console","value","seq__45888","chunk__45889","count__45890","i__45891","map__45896","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__45902","ms","dispatch","effect","cljs.core.remove","cljs.core/nil?","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__45905","chunk__45906","count__45907","i__45908","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__45915","chunk__45916","count__45917","i__45918","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^F",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1C","reagent/impl/batching.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","~$reagent.debug","~$reagent.impl.util"]]],["^1C","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.dom.HtmlElement"]]],["^1C","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.labs.userAgent.util","~$goog.string"]]],["^1C","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.array","~$goog.asserts"]]],["^1C","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2M","~$goog.object","~$goog.string.internal"]]],["^1C","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2R"]]],["^1C","re_frame/loggers.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","~$clojure.set"]]],["^1C","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P"]]],["^2B","node_modules/prop-types/checkPropTypes.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1C","reagent/impl/util.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^2J","~$clojure.string"]]],["^1C","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2M","~$goog.reflect","^2N"]]],["^1C","re_frame/router.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^O","^M","^X","^P"]]],["^1C","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","re_frame/registrar.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^M","^X"]]],["^1C","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/scheduler/cjs/scheduler.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","f3053a44b61bb3278782ca56c8dcc410f1944dc1","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","reagent/ratom.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^2K","^2J","~$reagent.impl.batching","^2Y","^2Q"]]],["^2B","node_modules/scheduler/cjs/scheduler.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4a53b69f29acae19788e3e2f50c92f8d588f5c78","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","re_frame/interop.cljs"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1C","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","12c2587c156a560ed636c6e3cd1c0a7dc69d31e0","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^2B","node_modules/react/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1C","shadow/js.js"],["13e6d579ee96996286c70df42974bdb936037123","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","reagent/impl/template.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^?","^2[","~$clojure.walk","^2K","~$reagent.impl.component","^34","^37","^2J","^2Q"]]],["^1C","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P"]]],["^2B","node_modules/react-dom/cjs/react-dom.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","db8259775ecd7012ed94e61ee3adc97de9522104","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1608738513000,1608738513000,1561026596000],["^2B","node_modules/react/cjs/react.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","87a015cdc96b5a16d98a3d5c344d21accc58dadd","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","^3<","~$module$node_modules$prop_types$checkPropTypes"]]],["^1C","re_frame/events.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^Y","~$re-frame.utils","^M","^Q","^X","^N","^P"]]],["^1C","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","^33"]]],["^1C","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","~$goog.html.trustedtypes","^2U","^2V","^2W","^2X"]]],["^1C","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","9028fd288ab5a39d86fa3b5f3e9b09bad420d4f6","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","~$goog.html.SafeUrl","^2W","^2X","^2R"]]],["^1C","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3B","^2T","~$goog.html.uncheckedconversions","^2W","^2R"]]],["^1C","reagent/impl/component.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^2Q","^?","^2K","^34","^37","^2J"]]],["^1C","clojure/walk.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R"]]],["^1C","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1C","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","~$goog.dom.TagName","~$goog.dom.tags","^3F","^3G","~$goog.html.SafeStyleSheet","^3B","^2T","^3A","^2U","^2V","^30","^2Q","^2W","^2X","^2R"]]],["^1C","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2Q"]]],["^1C","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/scheduler/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","408126fc2241739168bcaf5965ae56a7df143144","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1C","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2M","^2N"]]],["^1C","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3K","~$goog.dom.safe","^3E","^3H","~$goog.math.Coordinate","~$goog.math.Size","^2Q","^2N","~$goog.string.Unicode","~$goog.userAgent"]]],["^1C","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.debug.Error","^3Q"]]],["^1C","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","^2N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1C","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/object-assign/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","519ffd5a4c91b67302cc9947b794966d629860cd","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","re_frame/db.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^M"]]],["^1C","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",[]]],["^1C","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2Q"]]],["^1C","clojure/string.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^2N","~$goog.string.StringBuffer"]]],["^2B","node_modules/react/cjs/react.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","7e2672a2ef583715727d174c8812a70391258842","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","^3<"]]],["^1C","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P"]]],["^1C","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^3R","^3H","^2W","^2R"]]],["^1C","re_frame/interceptor.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^X","^M","^P","^2Y"]]],["^1C","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2R"]]],["^1C","reagent/core.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^?","~$reagent.impl.template","^3;","^2K","^34","^37","^2J","~$reagent.dom"]]],["^1C","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.math"]]],["^1C","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","^3D","^44"]]],["^1C","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.debug.entryPointRegistry","~$goog.dom","^3K","^3R","^3D","^3E","^2T","^30","^31","^2W"]]],["^1C","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","^3E","^3F","^3G","^3M","^3B","^2T","^2W","^2R"]]],["^1C","re_frame/utils.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^X"]]],["^1C","reagent/dom.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^A","^2K","^42","^34","^37","^2J"]]],["^1C","re_frame/fx.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]]],["^2B","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","cljs/core.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.math.Long","~$goog.math.Integer","^2N","^2Q","^2O","~$goog.Uri","^41"]]],["^1C","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","^3A","^2W","^2X"]]],["^1C","reagent/debug.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R"]]],["^1C","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","^3G","^2Q","^2W","^2X","^2R"]]],["^1C","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^33"]]],["^1C","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^3V"]]],["^2B","node_modules/scheduler/tracing.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2B","node_modules/react-dom/cjs/react-dom.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","75942e2c51d78023c06fc0e51bb6fca0fea291b1","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","^?","^3<","^3?","^3=","~$module$node_modules$scheduler$tracing"]]],["^1C","clojure/set.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R"]]],["^1C","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","^2N"]]],["^1C","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","^2X"]]],["^1C","re_frame/trace.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^M","^X","^3D"]]]]],"~:clj-info",["^ ","jar:file:/home/victor/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/debug.clj",1580720293000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1602861476000,"jar:file:/home/victor/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/core.clj",1580720293000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1561026596000,"jar:file:/home/victor/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/trace.cljc",1588591260000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1602861476000,"jar:file:/home/victor/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1561026614000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/ratom.clj",1580720293000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1569660114000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1602063594000,"jar:file:/home/victor/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/interop.clj",1588591260000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^U","^U","^U","^V","^P","^W","^O","^X","^X","^Y","^Y"],"^Z",["^F",["^["]],"~:shadow/js-access-global",["^F",["Error"]],"^10",["^ ","^11","^Y","^12","^N","^13","^M","^14","^Q","^15","^Q","^16","^Q","^17","^X"],"~:defs",["^ ","~$kind",["^ ","^G","^1O","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1:",["~$quote",["^1:",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^G","^1Q","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1:",[["^5;","^5<"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^59",["^1:",["^5:",["^1:",[["^5;","^5<"]]]]],"^5=","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^G","^1S","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^55","~$cljs.core/IMap","^5=","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^18",["^ ","^P","^P","^V","^P","^R","^R"],"~:cljs.analyzer/constants",["^ ","^Z",["^F",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^5W","^5R","^5J","^5P","^5X","^5Q","^5K","^5M","^5U","^5S","^5T","^5Y","^5V","^5O","^5L","^5N","^5I"]],"^1?",["^ ","^[",["^F",[]]],"^1@",["^ "],"^1A",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2A",[["^61","~:static-fns"],true,["^61","~:shadow-tweaks"],null,["^61","~:source-map-inline"],null,["^61","~:elide-asserts"],false,["^61","~:optimize-constants"],null,["^61","^1F"],null,["^61","~:external-config"],null,["^61","~:tooling-config"],null,["^61","~:emit-constants"],null,["^61","~:load-tests"],null,["^61","~:form-size-threshold"],null,["^61","~:data-readers"],null,["^61","~:infer-externs"],"~:auto",["^61","^1H"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^61","~:fn-invoke-direct"],null,["^61","~:source-map"],"/dev/null"]]]