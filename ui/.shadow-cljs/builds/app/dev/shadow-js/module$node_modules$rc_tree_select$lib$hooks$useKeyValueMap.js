["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-tree-select/lib/hooks/useKeyValueMap.js"],"~:js","shadow$provide.module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap=function(global,require,module,exports){global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(flattenOptions){return React.useMemo(function(){var cacheKeyMap=new Map,cacheValueMap=new Map;flattenOptions.forEach(function(dataNode){cacheKeyMap.set(dataNode.key,dataNode);cacheValueMap.set(dataNode.data.value,dataNode)});\nreturn[cacheKeyMap,cacheValueMap]},[flattenOptions])};var React=global(require(\"module$node_modules$react$index\"))}","~:source","shadow$provide[\"module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useKeyValueMap;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\n/**\n * Return cached Key Value map with DataNode.\n * Only re-calculate when `flattenOptions` changed.\n */\nfunction useKeyValueMap(flattenOptions) {\n  return React.useMemo(function () {\n    var cacheKeyMap = new Map();\n    var cacheValueMap = new Map(); // Cache options by key\n\n    flattenOptions.forEach(function (dataNode) {\n      cacheKeyMap.set(dataNode.key, dataNode);\n      cacheValueMap.set(dataNode.data.value, dataNode);\n    });\n    return [cacheKeyMap, cacheValueMap];\n  }, [flattenOptions]);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireWildcard","~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1619101950050,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,2DAAf,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAE9BI,OAAA,CAAOC,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAA,CAAQK,OAAR,CAQAC,QAAuB,CAACC,cAAD,CAAiB,CACtC,MAAOC,MAAA,CAAMC,OAAN,CAAc,QAAS,EAAG,CAC/B,IAAIC,YAAc,IAAIC,GAAtB,CACIC,cAAgB,IAAID,GAExBJ,eAAA,CAAeM,OAAf,CAAuB,QAAS,CAACC,QAAD,CAAW,CACzCJ,WAAA,CAAYK,GAAZ,CAAgBD,QAAhB,CAAyBE,GAAzB,CAA8BF,QAA9B,CACAF,cAAA,CAAcG,GAAd,CAAkBD,QAAlB,CAA2BG,IAA3B,CAAgCb,KAAhC,CAAuCU,QAAvC,CAFyC,CAA3C,CAIA;MAAO,CAACJ,WAAD,CAAcE,aAAd,CARwB,CAA1B,CASJ,CAACL,cAAD,CATI,CAD+B,CANxC,KAAIC,MAAQP,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CAV4G;\",\n\"sources\":[\"node_modules/rc-tree-select/lib/hooks/useKeyValueMap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireWildcard = require(\\\"@babel/runtime/helpers/interopRequireWildcard\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = useKeyValueMap;\\n\\nvar React = _interopRequireWildcard(require(\\\"react\\\"));\\n\\n/**\\n * Return cached Key Value map with DataNode.\\n * Only re-calculate when `flattenOptions` changed.\\n */\\nfunction useKeyValueMap(flattenOptions) {\\n  return React.useMemo(function () {\\n    var cacheKeyMap = new Map();\\n    var cacheValueMap = new Map(); // Cache options by key\\n\\n    flattenOptions.forEach(function (dataNode) {\\n      cacheKeyMap.set(dataNode.key, dataNode);\\n      cacheValueMap.set(dataNode.data.value, dataNode);\\n    });\\n    return [cacheKeyMap, cacheValueMap];\\n  }, [flattenOptions]);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireWildcard\",\"Object\",\"defineProperty\",\"value\",\"default\",\"useKeyValueMap\",\"flattenOptions\",\"React\",\"useMemo\",\"cacheKeyMap\",\"Map\",\"cacheValueMap\",\"forEach\",\"dataNode\",\"set\",\"key\",\"data\"]\n}\n"]