["^ ","~:output",["^ ","~:js","goog.provide('re_com.util');\n/**\n * Takes a function 'f' amd a map 'm'.  Applies 'f' to each value in 'm' and returns.\n * (fmap  inc  {:a 4  :b 2})   =>   {:a 5  :b 3}\n */\nre_com.util.fmap = (function re_com$util$fmap(f,m){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4523__auto__ = (function re_com$util$fmap_$_iter__46157(s__46158){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__46158__$1 = s__46158;\nwhile(true){\nvar temp__5720__auto__ = cljs.core.seq(s__46158__$1);\nif(temp__5720__auto__){\nvar s__46158__$2 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__46158__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__46158__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__46160 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__46159 = (0);\nwhile(true){\nif((i__46159 < size__4522__auto__)){\nvar vec__46161 = cljs.core._nth(c__4521__auto__,i__46159);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46161,(0),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46161,(1),null);\ncljs.core.chunk_append(b__46160,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(val) : f.call(null,val))], null));\n\nvar G__46279 = (i__46159 + (1));\ni__46159 = G__46279;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__46160),re_com$util$fmap_$_iter__46157(cljs.core.chunk_rest(s__46158__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__46160),null);\n}\n} else {\nvar vec__46169 = cljs.core.first(s__46158__$2);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46169,(0),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46169,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(val) : f.call(null,val))], null),re_com$util$fmap_$_iter__46157(cljs.core.rest(s__46158__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4523__auto__(m);\n})());\n});\n/**\n * Recursively merges maps. If vals are not maps, the last value wins.\n */\nre_com.util.deep_merge = (function re_com$util$deep_merge(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46290 = arguments.length;\nvar i__4731__auto___46291 = (0);\nwhile(true){\nif((i__4731__auto___46291 < len__4730__auto___46290)){\nargs__4736__auto__.push((arguments[i__4731__auto___46291]));\n\nvar G__46292 = (i__4731__auto___46291 + (1));\ni__4731__auto___46291 = G__46292;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn re_com.util.deep_merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\nre_com.util.deep_merge.cljs$core$IFn$_invoke$arity$variadic = (function (vals){\nif(cljs.core.every_QMARK_(cljs.core.map_QMARK_,vals)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.merge_with,re_com.util.deep_merge,vals);\n} else {\nreturn cljs.core.last(vals);\n}\n});\n\nre_com.util.deep_merge.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nre_com.util.deep_merge.cljs$lang$applyTo = (function (seq46172){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq46172));\n});\n\n/**\n * Takes a value or an atom\n *   If it's a value, returns it\n *   If it's a Reagent object that supports IDeref, returns the value inside it by derefing\n *   \n */\nre_com.util.deref_or_value = (function re_com$util$deref_or_value(val_or_atom){\nif((((!((val_or_atom == null))))?(((((val_or_atom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === val_or_atom.cljs$core$IDeref$))))?true:(((!val_or_atom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,val_or_atom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,val_or_atom))){\nreturn cljs.core.deref(val_or_atom);\n} else {\nreturn val_or_atom;\n}\n});\n/**\n * Takes a value or an atom\n *   If it's a value, returns it\n *   If it's a Reagent object that supports IDeref, returns the value inside it, but WITHOUT derefing\n * \n *   The arg validation code uses this, since calling deref-or-value adds this arg to the watched ratom list for the component\n *   in question, which in turn can cause different rendering behaviour between dev (where we validate) and prod (where we don't).\n * \n *   This was experienced in popover-content-wrapper with the position-injected atom which was not derefed there, however\n *   the dev-only validation caused it to be derefed, modifying its render behaviour and causing mayhem and madness for the developer.\n * \n *   See below that different Reagent types have different ways of retrieving the value without causing capture, although in the case of\n *   Track, we just deref it as there is no peek or state, so hopefully this won't cause issues (surely this is used very rarely).\n *   \n */\nre_com.util.deref_or_value_peek = (function re_com$util$deref_or_value_peek(val_or_atom){\nif((((!((val_or_atom == null))))?(((((val_or_atom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === val_or_atom.cljs$core$IDeref$))))?true:(((!val_or_atom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,val_or_atom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,val_or_atom))){\nif((val_or_atom instanceof reagent.ratom.RAtom)){\nreturn val_or_atom.state;\n} else {\nif((val_or_atom instanceof reagent.ratom.Reaction)){\nreturn val_or_atom._peek_at();\n} else {\nif((val_or_atom instanceof reagent.ratom.RCursor)){\nreturn val_or_atom._peek();\n} else {\nif((val_or_atom instanceof reagent.ratom.Track)){\nreturn cljs.core.deref(val_or_atom);\n} else {\nif((val_or_atom instanceof reagent.ratom.Wrapper)){\nreturn val_or_atom.state;\n} else {\nthrow (new Error(\"Unknown reactive data type\"));\n\n}\n}\n}\n}\n}\n} else {\nreturn val_or_atom;\n}\n});\nre_com.util.get_element_by_id = (function re_com$util$get_element_by_id(id){\nreturn document.getElementById(id);\n});\n/**\n * Left pad a string 's' with '0', until 's' has length 'len'. Return 's' unchanged, if it is already len or greater\n */\nre_com.util.pad_zero = (function re_com$util$pad_zero(s,len){\nif((cljs.core.count(s) < len)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.take_last(len,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(len,\"0\"),s)));\n} else {\nreturn s;\n}\n});\n/**\n * return 'num' as a string of 'len' characters, left padding with '0' as necessary\n */\nre_com.util.pad_zero_number = (function re_com$util$pad_zero_number(num,len){\nreturn re_com.util.pad_zero(cljs.core.str.cljs$core$IFn$_invoke$arity$1(num),len);\n});\n/**\n * takes a number (and optional :negative keyword to indicate a negative value) and returns that number as a string with 'px' at the end\n */\nre_com.util.px = (function re_com$util$px(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46295 = arguments.length;\nvar i__4731__auto___46299 = (0);\nwhile(true){\nif((i__4731__auto___46299 < len__4730__auto___46295)){\nargs__4736__auto__.push((arguments[i__4731__auto___46299]));\n\nvar G__46300 = (i__4731__auto___46299 + (1));\ni__4731__auto___46299 = G__46300;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn re_com.util.px.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\nre_com.util.px.cljs$core$IFn$_invoke$arity$variadic = (function (val,negative){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(negative)?(- val):val)),\"px\"].join('');\n});\n\nre_com.util.px.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nre_com.util.px.cljs$lang$applyTo = (function (seq46175){\nvar G__46176 = cljs.core.first(seq46175);\nvar seq46175__$1 = cljs.core.next(seq46175);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46176,seq46175__$1);\n});\n\n/**\n * Removes the item at position n from a vector v, returning a shrunk vector\n */\nre_com.util.remove_nth = (function re_com$util$remove_nth(v,n){\nreturn cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v,(0),n),cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v,(n + (1)),cljs.core.count(v))));\n});\nre_com.util.insert_nth = (function re_com$util$insert_nth(vect,index,item){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge,cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(vect,(0),index),item,cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(vect,index));\n});\n/**\n * Takes a vector of maps 'v'. Returns the position of the first item in 'v' whose id-fn (default :id) matches 'id'.\n * Returns nil if id not found\n */\nre_com.util.position_for_id = (function re_com$util$position_for_id(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46306 = arguments.length;\nvar i__4731__auto___46307 = (0);\nwhile(true){\nif((i__4731__auto___46307 < len__4730__auto___46306)){\nargs__4736__auto__.push((arguments[i__4731__auto___46307]));\n\nvar G__46308 = (i__4731__auto___46307 + (1));\ni__4731__auto___46307 = G__46308;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn re_com.util.position_for_id.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\nre_com.util.position_for_id.cljs$core$IFn$_invoke$arity$variadic = (function (id,v,p__46181){\nvar map__46182 = p__46181;\nvar map__46182__$1 = (((((!((map__46182 == null))))?(((((map__46182.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46182.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46182):map__46182);\nvar id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__46182__$1,new cljs.core.Keyword(null,\"id-fn\",\"id-fn\",316222798),new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nvar index_fn = ((function (map__46182,map__46182__$1,id_fn){\nreturn (function (index,item){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((id_fn.cljs$core$IFn$_invoke$arity$1 ? id_fn.cljs$core$IFn$_invoke$arity$1(item) : id_fn.call(null,item)),id)){\nreturn index;\n} else {\nreturn null;\n}\n});})(map__46182,map__46182__$1,id_fn))\n;\nreturn cljs.core.first(cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(index_fn,v));\n});\n\nre_com.util.position_for_id.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\nre_com.util.position_for_id.cljs$lang$applyTo = (function (seq46177){\nvar G__46178 = cljs.core.first(seq46177);\nvar seq46177__$1 = cljs.core.next(seq46177);\nvar G__46179 = cljs.core.first(seq46177__$1);\nvar seq46177__$2 = cljs.core.next(seq46177__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46178,G__46179,seq46177__$2);\n});\n\n/**\n * Takes a vector of maps 'v'. Returns the first item in 'v' whose id-fn (default :id) matches 'id'.\n * Returns nil if id not found\n */\nre_com.util.item_for_id = (function re_com$util$item_for_id(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46316 = arguments.length;\nvar i__4731__auto___46321 = (0);\nwhile(true){\nif((i__4731__auto___46321 < len__4730__auto___46316)){\nargs__4736__auto__.push((arguments[i__4731__auto___46321]));\n\nvar G__46322 = (i__4731__auto___46321 + (1));\ni__4731__auto___46321 = G__46322;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn re_com.util.item_for_id.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\nre_com.util.item_for_id.cljs$core$IFn$_invoke$arity$variadic = (function (id,v,p__46188){\nvar map__46189 = p__46188;\nvar map__46189__$1 = (((((!((map__46189 == null))))?(((((map__46189.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46189.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46189):map__46189);\nvar id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__46189__$1,new cljs.core.Keyword(null,\"id-fn\",\"id-fn\",316222798),new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nreturn cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (map__46189,map__46189__$1,id_fn){\nreturn (function (p1__46184_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((id_fn.cljs$core$IFn$_invoke$arity$1 ? id_fn.cljs$core$IFn$_invoke$arity$1(p1__46184_SHARP_) : id_fn.call(null,p1__46184_SHARP_)),id);\n});})(map__46189,map__46189__$1,id_fn))\n,v));\n});\n\nre_com.util.item_for_id.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\nre_com.util.item_for_id.cljs$lang$applyTo = (function (seq46185){\nvar G__46186 = cljs.core.first(seq46185);\nvar seq46185__$1 = cljs.core.next(seq46185);\nvar G__46187 = cljs.core.first(seq46185__$1);\nvar seq46185__$2 = cljs.core.next(seq46185__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46186,G__46187,seq46185__$2);\n});\n\n/**\n * Takes a vector of maps 'v', each of which has an id-fn (default :id) key.\n *   Return v where item matching 'id' is excluded\n */\nre_com.util.remove_id_item = (function re_com$util$remove_id_item(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___46327 = arguments.length;\nvar i__4731__auto___46329 = (0);\nwhile(true){\nif((i__4731__auto___46329 < len__4730__auto___46327)){\nargs__4736__auto__.push((arguments[i__4731__auto___46329]));\n\nvar G__46330 = (i__4731__auto___46329 + (1));\ni__4731__auto___46329 = G__46330;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn re_com.util.remove_id_item.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\nre_com.util.remove_id_item.cljs$core$IFn$_invoke$arity$variadic = (function (id,v,p__46218){\nvar map__46219 = p__46218;\nvar map__46219__$1 = (((((!((map__46219 == null))))?(((((map__46219.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46219.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46219):map__46219);\nvar id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__46219__$1,new cljs.core.Keyword(null,\"id-fn\",\"id-fn\",316222798),new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nreturn cljs.core.filterv(((function (map__46219,map__46219__$1,id_fn){\nreturn (function (p1__46209_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((id_fn.cljs$core$IFn$_invoke$arity$1 ? id_fn.cljs$core$IFn$_invoke$arity$1(p1__46209_SHARP_) : id_fn.call(null,p1__46209_SHARP_)),id);\n});})(map__46219,map__46219__$1,id_fn))\n,v);\n});\n\nre_com.util.remove_id_item.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\nre_com.util.remove_id_item.cljs$lang$applyTo = (function (seq46215){\nvar G__46216 = cljs.core.first(seq46215);\nvar seq46215__$1 = cljs.core.next(seq46215);\nvar G__46217 = cljs.core.first(seq46215__$1);\nvar seq46215__$2 = cljs.core.next(seq46215__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__46216,G__46217,seq46215__$2);\n});\n\n/**\n * (for [[index item first? last?] (enumerate coll)] ...)  \n */\nre_com.util.enumerate = (function re_com$util$enumerate(coll){\nvar c = (cljs.core.count(coll) - (1));\nvar f = ((function (c){\nreturn (function (index,item){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,item,cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),index),cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c,index)], null);\n});})(c))\n;\nreturn cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(f,coll);\n});\n/**\n * Given a DOM node, I traverse through all ascendant nodes (until I reach body), summing any scrollLeft and scrollTop values\n * and return these sums in a map\n */\nre_com.util.sum_scroll_offsets = (function re_com$util$sum_scroll_offsets(node){\nvar current_node = node.parentNode;\nvar sum_scroll_left = (0);\nvar sum_scroll_top = (0);\nwhile(true){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_node.tagName,\"BODY\")){\nvar G__46331 = current_node.parentNode;\nvar G__46332 = (sum_scroll_left + current_node.scrollLeft);\nvar G__46333 = (sum_scroll_top + current_node.scrollTop);\ncurrent_node = G__46331;\nsum_scroll_left = G__46332;\nsum_scroll_top = G__46333;\ncontinue;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"left\",\"left\",-399115937),sum_scroll_left,new cljs.core.Keyword(null,\"top\",\"top\",-1856271961),sum_scroll_top], null);\n}\nbreak;\n}\n});\n/**\n * Answer a goog.date.UtcDateTime based on local date/time.\n */\nre_com.util.now__GT_utc = (function re_com$util$now__GT_utc(){\nvar local_date = (new goog.date.DateTime());\nreturn (new goog.date.UtcDateTime(local_date.getYear(),local_date.getMonth(),local_date.getDate(),(0),(0),(0),(0)));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_com/util.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-com.util","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.set","^M","~$reagent.ratom","^N","~$goog.date.DateTime","^O","~$goog.date.UtcDateTime","^P","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$superset?","^M","~$RAtom","^N","~$Reaction","^N","~$RCursor","^N","~$Track","^N","~$Wrapper","^N"],"~:require-macros",["^ ","^Q","^Q","^N","^N"],"~:form",["~#list",["~$ns","^H",["^12",["^T",["^M","~:refer",["^V"]],["^N","^14",["^W","^X","^Y","^Z","^["]],["^O"],["^P"]]]]],"~:flags",["^ ","^T",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^R","^Q","^M","^N","^O","^P"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","re_com/util.cljs"],"~:compiled-at",1619083332825,"~:resource-name","re_com/util.cljs","~:warnings",[],"~:source","(ns re-com.util\r\n  (:require\r\n    [clojure.set :refer [superset?]]\r\n    [reagent.ratom :refer [RAtom Reaction RCursor Track Wrapper]]\r\n    [goog.date.DateTime]\r\n    [goog.date.UtcDateTime]))\r\n\r\n(defn fmap\r\n  \"Takes a function 'f' amd a map 'm'.  Applies 'f' to each value in 'm' and returns.\r\n   (fmap  inc  {:a 4  :b 2})   =>   {:a 5  :b 3}\"\r\n  [f m]\r\n  (into {} (for [[k val] m] [k (f val)])))\r\n\r\n(defn deep-merge\r\n  \"Recursively merges maps. If vals are not maps, the last value wins.\"\r\n  [& vals]\r\n  (if (every? map? vals)\r\n    (apply merge-with deep-merge vals)\r\n    (last vals)))\r\n\r\n\r\n(defn deref-or-value\r\n  \"Takes a value or an atom\r\n  If it's a value, returns it\r\n  If it's a Reagent object that supports IDeref, returns the value inside it by derefing\r\n  \"\r\n  [val-or-atom]\r\n  (if (satisfies? IDeref val-or-atom)\r\n    @val-or-atom\r\n    val-or-atom))\r\n\r\n\r\n(defn deref-or-value-peek\r\n  \"Takes a value or an atom\r\n  If it's a value, returns it\r\n  If it's a Reagent object that supports IDeref, returns the value inside it, but WITHOUT derefing\r\n\r\n  The arg validation code uses this, since calling deref-or-value adds this arg to the watched ratom list for the component\r\n  in question, which in turn can cause different rendering behaviour between dev (where we validate) and prod (where we don't).\r\n\r\n  This was experienced in popover-content-wrapper with the position-injected atom which was not derefed there, however\r\n  the dev-only validation caused it to be derefed, modifying its render behaviour and causing mayhem and madness for the developer.\r\n\r\n  See below that different Reagent types have different ways of retrieving the value without causing capture, although in the case of\r\n  Track, we just deref it as there is no peek or state, so hopefully this won't cause issues (surely this is used very rarely).\r\n  \"\r\n  [val-or-atom]\r\n  (if (satisfies? IDeref val-or-atom)\r\n    (cond\r\n      (instance? RAtom    val-or-atom) val-or-atom.state\r\n      (instance? Reaction val-or-atom) (._peek-at val-or-atom)\r\n      (instance? RCursor  val-or-atom) (._peek val-or-atom)\r\n      (instance? Track    val-or-atom) @val-or-atom\r\n      (instance? Wrapper  val-or-atom) val-or-atom.state\r\n      :else                            (throw (js/Error. \"Unknown reactive data type\")))\r\n    val-or-atom))\r\n\r\n\r\n(defn get-element-by-id\r\n  [id]\r\n  (.getElementById js/document id))\r\n\r\n\r\n(defn pad-zero\r\n  \"Left pad a string 's' with '0', until 's' has length 'len'. Return 's' unchanged, if it is already len or greater\"\r\n  [s len]\r\n  (if (< (count s) len)\r\n    (apply str (take-last len (concat (repeat len \\0) s)))\r\n    s))\r\n\r\n\r\n(defn pad-zero-number\r\n  \"return 'num' as a string of 'len' characters, left padding with '0' as necessary\"\r\n  [num len]\r\n  (pad-zero (str num) len))\r\n\r\n\r\n(defn px\r\n  \"takes a number (and optional :negative keyword to indicate a negative value) and returns that number as a string with 'px' at the end\"\r\n  [val & negative]\r\n  (str (if negative (- val) val) \"px\"))\r\n\r\n\r\n;; ----------------------------------------------------------------------------\r\n;; Handy vector functions\r\n;; ----------------------------------------------------------------------------\r\n\r\n(defn remove-nth\r\n  \"Removes the item at position n from a vector v, returning a shrunk vector\"\r\n  [v n]\r\n  (vec\r\n    (concat\r\n      (subvec v 0 n) (subvec v (inc n) (count v)))))\r\n\r\n\r\n(defn insert-nth\r\n  [vect index item]\r\n  (apply merge (subvec vect 0 index) item (subvec vect index)))\r\n\r\n\r\n;; ----------------------------------------------------------------------------\r\n;; Utilities for vectors of maps containing :id\r\n;; ----------------------------------------------------------------------------\r\n\r\n(defn position-for-id\r\n  \"Takes a vector of maps 'v'. Returns the position of the first item in 'v' whose id-fn (default :id) matches 'id'.\r\n   Returns nil if id not found\"\r\n  [id v & {:keys [id-fn] :or {id-fn :id}}]\r\n  (let [index-fn (fn [index item] (when (= (id-fn item) id) index))]\r\n    (first (keep-indexed index-fn v))))\r\n\r\n\r\n\r\n(defn item-for-id\r\n  \"Takes a vector of maps 'v'. Returns the first item in 'v' whose id-fn (default :id) matches 'id'.\r\n   Returns nil if id not found\"\r\n  [id v & {:keys [id-fn] :or {id-fn :id}}]\r\n  (first (filter #(= (id-fn %) id) v)))\r\n\r\n\r\n(defn remove-id-item\r\n  \"Takes a vector of maps 'v', each of which has an id-fn (default :id) key.\r\n  Return v where item matching 'id' is excluded\"\r\n  [id v & {:keys [id-fn] :or {id-fn :id}}]\r\n  (filterv #(not= (id-fn %) id) v))\r\n\r\n\r\n;; ----------------------------------------------------------------------------\r\n;; Other functions\r\n;; ----------------------------------------------------------------------------\r\n\r\n(defn enumerate\r\n  \"(for [[index item first? last?] (enumerate coll)] ...)  \"\r\n  [coll]\r\n  (let [c (dec (count coll))\r\n        f (fn [index item] [index item (= 0 index) (= c index)])]\r\n    (map-indexed f coll)))\r\n\r\n(defn sum-scroll-offsets\r\n  \"Given a DOM node, I traverse through all ascendant nodes (until I reach body), summing any scrollLeft and scrollTop values\r\n   and return these sums in a map\"\r\n  [node]\r\n  (loop [current-node    (.-parentNode node) ;; Begin at parent\r\n         sum-scroll-left 0\r\n         sum-scroll-top  0]\r\n    (if (not= (.-tagName current-node) \"BODY\")\r\n      (recur (.-parentNode current-node)\r\n             (+ sum-scroll-left (.-scrollLeft current-node))\r\n             (+ sum-scroll-top  (.-scrollTop  current-node)))\r\n      {:left sum-scroll-left\r\n       :top  sum-scroll-top})))\r\n\r\n;; ----------------------------------------------------------------------------\r\n;; date functions\r\n;; ----------------------------------------------------------------------------\r\n\r\n(defn now->utc\r\n  \"Answer a goog.date.UtcDateTime based on local date/time.\"\r\n  []\r\n  (let [local-date (js/goog.date.DateTime.)]\r\n    (js/goog.date.UtcDateTime.\r\n      (.getYear local-date)\r\n      (.getMonth local-date)\r\n      (.getDate local-date)\r\n      0 0 0 0)))\r\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["re-com.util/fmap","f","m","cljs.core.into","iter__4523__auto__","s__46158","cljs.core/LazySeq","temp__5720__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__46160","cljs.core/chunk-buffer","i__46159","vec__46161","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__46157","cljs.core/chunk-rest","vec__46169","cljs.core/first","cljs.core/cons","cljs.core/rest","k","val","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","re-com.util/deep-merge","seq46172","self__4718__auto__","vals","cljs.core/every?","cljs.core/map?","cljs.core.apply","cljs.core/merge-with","cljs.core/last","re-com.util/deref-or-value","val-or-atom","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cljs.core/IDeref","re-com.util/deref-or-value-peek","reagent.ratom/RAtom","reagent.ratom/Reaction","reagent.ratom/RCursor","reagent.ratom/Track","reagent.ratom/Wrapper","js/Error","re-com.util/get-element-by-id","id","js/document","re-com.util/pad-zero","s","len","cljs.core/str","cljs.core/take-last","cljs.core.concat","cljs.core.repeat","re-com.util/pad-zero-number","num","re-com.util/px","seq46175","G__46176","cljs.core/next","self__4717__auto__","negative","re-com.util/remove-nth","v","n","cljs.core/vec","cljs.core.subvec","re-com.util/insert-nth","vect","index","item","cljs.core/merge","re-com.util/position-for-id","p__46181","map__46182","cljs.core/hash-map","cljs.core.get","seq46177","G__46178","G__46179","id-fn","index-fn","cljs.core._EQ_","cljs.core.keep_indexed","re-com.util/item-for-id","p__46188","map__46189","seq46185","G__46186","G__46187","p1__46184#","cljs.core.filter","re-com.util/remove-id-item","p__46218","map__46219","seq46215","G__46216","G__46217","p1__46209#","cljs.core/filterv","cljs.core.not_EQ_","re-com.util/enumerate","coll","c","cljs.core.map_indexed","re-com.util/sum-scroll-offsets","node","current-node","sum-scroll-left","sum-scroll-top","re-com.util/now->utc","local-date","js/goog.date.DateTime","js/goog.date.UtcDateTime","cljs.core/chunk-first"]],"~:used-vars",["^F",["~$cljs.core/PROTOCOL_SENTINEL","~$js/document","~$cljs.core/str","~$re-com.util/pad-zero-number","~$cljs.core/filter","~$re-com.util/now->utc","~$cljs.core/=","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/keep-indexed","~$cljs.core/seq","~$cljs.core/apply","~$re-com.util/get-element-by-id","~$re-com.util/remove-id-item","~$cljs.core/last","~$cljs.core/not=","~$re-com.util/position-for-id","~$cljs.core/concat","~$js/goog.date.UtcDateTime","~$reagent.ratom/RCursor","~$re-com.util/enumerate","~$cljs.core/native-satisfies?","~$cljs.core/merge-with","~$cljs.core/into","~$cljs.core/map?","~$reagent.ratom/Wrapper","~$re-com.util/deref-or-value","~$re-com.util/insert-nth","~$re-com.util/item-for-id","~$cljs.core/filterv","~$cljs.core/subvec","~$re-com.util/fmap","~$cljs.core/vec","~$re-com.util/deep-merge","~$reagent.ratom/Track","~$cljs.core/IDeref","~$cljs.core/not","~$re-com.util/px","~$re-com.util/sum-scroll-offsets","~$re-com.util/deref-or-value-peek","~$cljs.core/map-indexed","~$reagent.ratom/Reaction","~$re-com.util/pad-zero","~$reagent.ratom/RAtom","~$cljs.core/repeat","~$cljs.core/take-last","~$cljs.core/first","~$re-com.util/remove-nth","~$cljs.core/merge","~$cljs.core/every?","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^19","reagent/impl/batching.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^R","^Q","~$reagent.debug","~$reagent.impl.util"]]],["^19","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","~$goog.dom.HtmlElement"]]],["^19","goog/i18n/datetimesymbols.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","~$goog.array","~$goog.asserts"]]],["^19","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2U","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^19","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2Y"]]],["^19","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V"]]],["^19","reagent/impl/util.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^Q","^2R","~$clojure.string"]]],["^19","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","re_com/util.cljs"],["081a88f9d0022df608ba5fc504080a2f05dbce40","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^Q","^M","^N","^O","^P"]]],["^19","goog/date/utcdatetime.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","~$goog.date","~$goog.date.Date","^O","~$goog.date.Interval"]]],["^19","reagent/ratom.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^Q","^2S","^2R","~$reagent.impl.batching","^M","^2X"]]],["^19","goog/date/datelike.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V"]]],"~:SHADOW-TIMESTAMP",[1608738513000,1608738513000,1561026596000],["^19","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V","~$goog.reflect"]]],["^19","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V","~$goog.html.trustedtypes","^30","^31","^32","^33"]]],["^19","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2U","^2V","~$goog.html.SafeUrl","^32","^33","^2Y"]]],["^19","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3<","^2[","~$goog.html.uncheckedconversions","^32","^2Y"]]],["^19","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^19","goog/date/date.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V","~$goog.date.DateLike","~$goog.i18n.DateTimeSymbols","~$goog.string"]]],["^19","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2U","^2V","~$goog.dom.TagName","~$goog.dom.tags","^3@","^3A","~$goog.html.SafeStyleSheet","^3<","^2[","^3;","^30","^31","~$goog.labs.userAgent.browser","^2X","^32","^33","^2Y"]]],["^19","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2X"]]],["^19","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^19","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2U","^2V","^3G","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^19","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",[]]],["^19","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2U","^2X"]]],["^19","clojure/string.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^Q","^3G","~$goog.string.StringBuffer"]]],["^19","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","~$goog.dom.safe","^3B","^32","^2Y"]]],["^19","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2Y"]]],["^19","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2U","^2V","^3>","~$goog.math"]]],["^19","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V","^3?","^3@","^3A","^3J","^3<","^2[","^32","^2Y"]]],["^19","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R"]]],["^19","cljs/core.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","~$goog.math.Long","~$goog.math.Integer","^3G","^2X","^2U","~$goog.Uri","^3S"]]],["^19","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V","^3;","^32","^33"]]],["^19","reagent/debug.cljs"],["78c9f88e2cab334b7ea465641d1db7d4829b676d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^Q"]]],["^19","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2U","^2V","^3A","^2X","^32","^33","^2Y"]]],["^19","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^3:"]]],["^19","clojure/set.cljs"],["a0e637ee383cfd62a1f790929210efb2e372a9ce","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^Q"]]],["^19","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2U","^2V","^3G"]]],["^19","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2N",["^ ","^2O",null,"^2P",["^F",[]],"^2Q",["^R","^2V","^33"]]]]],"~:clj-info",["^ ","jar:file:/home/victor/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/debug.clj",1580720293000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1602861476000,"jar:file:/home/victor/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1602861476000,"jar:file:/home/victor/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1561026614000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1555623369000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/ratom.clj",1580720293000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1561026596000,"jar:file:/home/victor/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1602063594000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_com/util.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R"],"^S",["^F",["^T"]],"~:shadow/js-access-global",["^F",["document","Error"]],"^U",["^ ","^V","^M","^W","^N","^X","^N","^Y","^N","^Z","^N","^[","^N"],"~:defs",["^ ","~$sum-scroll-offsets",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_com/util.cljs","^7",139,"^8",7,"^9",139,"^:",25,"~:arglists",["^12",["~$quote",["^12",[["~$node"]]]]],"~:doc","Given a DOM node, I traverse through all ascendant nodes (until I reach body), summing any scrollLeft and scrollTop values\n   and return these sums in a map"],"^G","^2?","^6","re_com/util.cljs","^:",25,"~:method-params",["^12",[["^4P"]]],"~:protocol-impl",null,"~:arglists-meta",["^12",[null,null]],"^8",1,"~:variadic?",false,"^7",139,"~:ret-tag","~$cljs.core/IMap","^9",139,"~:max-fixed-arity",1,"~:fn-var",true,"^4N",["^12",["^4O",["^12",[["^4P"]]]]],"^4Q","Given a DOM node, I traverse through all ascendant nodes (until I reach body), summing any scrollLeft and scrollTop values\n   and return these sums in a map"],"~$position-for-id",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",105,"^8",7,"^9",105,"^:",22,"^4N",["^12",["^4O",["^12",[["~$id","~$v","~$&",["^ ","~:keys",["~$id-fn"],"~:or",["^ ","^51","~:id"]]]]]]],"^4Q","Takes a vector of maps 'v'. Returns the position of the first item in 'v' whose id-fn (default :id) matches 'id'.\n   Returns nil if id not found","~:top-fn",["^ ","^4U",true,"~:fixed-arity",2,"^4X",2,"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4T",["^12",[null]]]],"^G","^1U","^6","re_com/util.cljs","^:",22,"^54",["^ ","^4U",true,"^55",2,"^4X",2,"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4T",["^12",[null]]],"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4S",null,"^55",2,"^4T",["^12",[null]],"^8",1,"^4U",true,"~:methods",[["^ ","^55",2,"^4U",true,"~:tag",["^F",["~$any","~$clj-nil"]]]],"^7",105,"^4V","^58","^9",105,"^4X",2,"^4Y",true,"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4Q","Takes a vector of maps 'v'. Returns the position of the first item in 'v' whose id-fn (default :id) matches 'id'.\n   Returns nil if id not found"],"~$enumerate",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",132,"^8",7,"^9",132,"^:",16,"^4N",["^12",["^4O",["^12",[["~$coll"]]]]],"^4Q","(for [[index item first? last?] (enumerate coll)] ...)  "],"^G","^1Y","^6","re_com/util.cljs","^:",16,"^4R",["^12",[["^5;"]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",132,"^4V","^58","^9",132,"^4X",1,"^4Y",true,"^4N",["^12",["^4O",["^12",[["^5;"]]]]],"^4Q","(for [[index item first? last?] (enumerate coll)] ...)  "],"~$remove-id-item",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",121,"^8",7,"^9",121,"^:",21,"^4N",["^12",["^4O",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]]]],"^4Q","Takes a vector of maps 'v', each of which has an id-fn (default :id) key.\n  Return v where item matching 'id' is excluded","^54",["^ ","^4U",true,"^55",2,"^4X",2,"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4T",["^12",[null]]]],"^G","^1R","^6","re_com/util.cljs","^:",21,"^54",["^ ","^4U",true,"^55",2,"^4X",2,"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4T",["^12",[null]]],"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4S",null,"^55",2,"^4T",["^12",[null]],"^8",1,"^4U",true,"^56",[["^ ","^55",2,"^4U",true,"^57","~$clj"]],"^7",121,"^4V","^58","^9",121,"^4X",2,"^4Y",true,"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4Q","Takes a vector of maps 'v', each of which has an id-fn (default :id) key.\n  Return v where item matching 'id' is excluded"],"~$remove-nth",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",88,"^8",7,"^9",88,"^:",17,"^4N",["^12",["^4O",["^12",[["~$v","~$n"]]]]],"^4Q","Removes the item at position n from a vector v, returning a shrunk vector"],"^G","^2H","^6","re_com/util.cljs","^:",17,"^4R",["^12",[["~$v","~$n"]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",88,"^4V",["^F",["^5=","~$cljs.core/IVector","^58","~$cljs.core/MetaFn","^59"]],"^9",88,"^4X",2,"^4Y",true,"^4N",["^12",["^4O",["^12",[["~$v","~$n"]]]]],"^4Q","Removes the item at position n from a vector v, returning a shrunk vector"],"~$deref-or-value",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",22,"^8",7,"^9",22,"^:",21,"^4N",["^12",["^4O",["^12",[["~$val-or-atom"]]]]],"^4Q","Takes a value or an atom\n  If it's a value, returns it\n  If it's a Reagent object that supports IDeref, returns the value inside it by derefing\n  "],"^G","^23","^6","re_com/util.cljs","^:",21,"^4R",["^12",[["^5B"]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",22,"^4V",["^F",[null,"^58"]],"^9",22,"^4X",1,"^4Y",true,"^4N",["^12",["^4O",["^12",[["^5B"]]]]],"^4Q","Takes a value or an atom\n  If it's a value, returns it\n  If it's a Reagent object that supports IDeref, returns the value inside it by derefing\n  "],"~$insert-nth",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",96,"^8",7,"^9",96,"^:",17,"^4N",["^12",["^4O",["^12",[["~$vect","~$index","~$item"]]]]]],"^G","^24","^6","re_com/util.cljs","^:",17,"^4R",["^12",[["^5D","^5E","^5F"]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",96,"^4V","^58","^9",96,"^4X",3,"^4Y",true,"^4N",["^12",["^4O",["^12",[["^5D","^5E","^5F"]]]]]],"~$now->utc",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",157,"^8",7,"^9",157,"^:",15,"^4N",["^12",["^4O",["^12",[[]]]]],"^4Q","Answer a goog.date.UtcDateTime based on local date/time."],"^G","^1J","^6","re_com/util.cljs","^:",15,"^4R",["^12",[[]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",157,"^4V","^1W","^9",157,"^4X",0,"^4Y",true,"^4N",["^12",["^4O",["^12",[[]]]]],"^4Q","Answer a goog.date.UtcDateTime based on local date/time."],"~$deep-merge",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",14,"^8",7,"^9",14,"^:",17,"^4N",["^12",["^4O",["^12",[["~$&","~$vals"]]]]],"^4Q","Recursively merges maps. If vals are not maps, the last value wins.","^54",["^ ","^4U",true,"^55",0,"^4X",0,"^4R",[["^12",["^5I"]]],"^4N",["^12",[["~$&","^5I"]]],"^4T",["^12",[null]]]],"^G","^2:","^6","re_com/util.cljs","^:",17,"^54",["^ ","^4U",true,"^55",0,"^4X",0,"^4R",[["^12",["^5I"]]],"^4N",["^12",[["~$&","^5I"]]],"^4T",["^12",[null]]],"^4R",[["^12",["^5I"]]],"^4S",null,"^55",0,"^4T",["^12",[null]],"^8",1,"^4U",true,"^56",[["^ ","^55",0,"^4U",true,"^57",["^F",["^58","^59"]]]],"^7",14,"^4V","^58","^9",14,"^4X",0,"^4Y",true,"^4N",["^12",[["~$&","^5I"]]],"^4Q","Recursively merges maps. If vals are not maps, the last value wins."],"~$deref-or-value-peek",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",33,"^8",7,"^9",33,"^:",26,"^4N",["^12",["^4O",["^12",[["^5B"]]]]],"^4Q","Takes a value or an atom\n  If it's a value, returns it\n  If it's a Reagent object that supports IDeref, returns the value inside it, but WITHOUT derefing\n\n  The arg validation code uses this, since calling deref-or-value adds this arg to the watched ratom list for the component\n  in question, which in turn can cause different rendering behaviour between dev (where we validate) and prod (where we don't).\n\n  This was experienced in popover-content-wrapper with the position-injected atom which was not derefed there, however\n  the dev-only validation caused it to be derefed, modifying its render behaviour and causing mayhem and madness for the developer.\n\n  See below that different Reagent types have different ways of retrieving the value without causing capture, although in the case of\n  Track, we just deref it as there is no peek or state, so hopefully this won't cause issues (surely this is used very rarely).\n  "],"^G","^2@","^6","re_com/util.cljs","^:",26,"^4R",["^12",[["^5B"]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",33,"^4V",["^F",[null,"^58"]],"^9",33,"^4X",1,"^4Y",true,"^4N",["^12",["^4O",["^12",[["^5B"]]]]],"^4Q","Takes a value or an atom\n  If it's a value, returns it\n  If it's a Reagent object that supports IDeref, returns the value inside it, but WITHOUT derefing\n\n  The arg validation code uses this, since calling deref-or-value adds this arg to the watched ratom list for the component\n  in question, which in turn can cause different rendering behaviour between dev (where we validate) and prod (where we don't).\n\n  This was experienced in popover-content-wrapper with the position-injected atom which was not derefed there, however\n  the dev-only validation caused it to be derefed, modifying its render behaviour and causing mayhem and madness for the developer.\n\n  See below that different Reagent types have different ways of retrieving the value without causing capture, although in the case of\n  Track, we just deref it as there is no peek or state, so hopefully this won't cause issues (surely this is used very rarely).\n  "],"~$pad-zero",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",64,"^8",7,"^9",64,"^:",15,"^4N",["^12",["^4O",["^12",[["~$s","~$len"]]]]],"^4Q","Left pad a string 's' with '0', until 's' has length 'len'. Return 's' unchanged, if it is already len or greater"],"^G","^2C","^6","re_com/util.cljs","^:",15,"^4R",["^12",[["~$s","^5L"]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",64,"^4V",["^F",[null,"^58"]],"^9",64,"^4X",2,"^4Y",true,"^4N",["^12",["^4O",["^12",[["~$s","^5L"]]]]],"^4Q","Left pad a string 's' with '0', until 's' has length 'len'. Return 's' unchanged, if it is already len or greater"],"~$get-element-by-id",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",59,"^8",7,"^9",59,"^:",24,"^4N",["^12",["^4O",["^12",[["^4["]]]]]],"^G","^1Q","^6","re_com/util.cljs","^:",24,"^4R",["^12",[["^4["]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",59,"^4V","~$js","^9",59,"^4X",1,"^4Y",true,"^4N",["^12",["^4O",["^12",[["^4["]]]]]],"~$px",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",78,"^8",7,"^9",78,"^:",9,"^4N",["^12",["^4O",["^12",[["~$val","~$&","~$negative"]]]]],"^4Q","takes a number (and optional :negative keyword to indicate a negative value) and returns that number as a string with 'px' at the end","^54",["^ ","^4U",true,"^55",1,"^4X",1,"^4R",[["^12",["^5P","^5Q"]]],"^4N",["^12",[["^5P","~$&","^5Q"]]],"^4T",["^12",[null]]]],"^G","^2>","^6","re_com/util.cljs","^:",9,"^54",["^ ","^4U",true,"^55",1,"^4X",1,"^4R",[["^12",["^5P","^5Q"]]],"^4N",["^12",[["^5P","~$&","^5Q"]]],"^4T",["^12",[null]]],"^4R",[["^12",["^5P","^5Q"]]],"^4S",null,"^55",1,"^4T",["^12",[null]],"^8",1,"^4U",true,"^56",[["^ ","^55",1,"^4U",true,"^57","~$string"]],"^7",78,"^4V","^58","^9",78,"^4X",1,"^4Y",true,"^4N",["^12",[["^5P","~$&","^5Q"]]],"^4Q","takes a number (and optional :negative keyword to indicate a negative value) and returns that number as a string with 'px' at the end"],"~$item-for-id",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",114,"^8",7,"^9",114,"^:",18,"^4N",["^12",["^4O",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]]]],"^4Q","Takes a vector of maps 'v'. Returns the first item in 'v' whose id-fn (default :id) matches 'id'.\n   Returns nil if id not found","^54",["^ ","^4U",true,"^55",2,"^4X",2,"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4T",["^12",[null]]]],"^G","^25","^6","re_com/util.cljs","^:",18,"^54",["^ ","^4U",true,"^55",2,"^4X",2,"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4T",["^12",[null]]],"^4R",[["^12",["^4[","~$v",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4S",null,"^55",2,"^4T",["^12",[null]],"^8",1,"^4U",true,"^56",[["^ ","^55",2,"^4U",true,"^57",["^F",["^58","^59"]]]],"^7",114,"^4V","^58","^9",114,"^4X",2,"^4Y",true,"^4N",["^12",[["^4[","~$v","~$&",["^ ","^50",["^51"],"^52",["^ ","^51","^53"]]]]],"^4Q","Takes a vector of maps 'v'. Returns the first item in 'v' whose id-fn (default :id) matches 'id'.\n   Returns nil if id not found"],"~$fmap",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",8,"^8",7,"^9",8,"^:",11,"^4N",["^12",["^4O",["^12",[["~$f","~$m"]]]]],"^4Q","Takes a function 'f' amd a map 'm'.  Applies 'f' to each value in 'm' and returns.\n   (fmap  inc  {:a 4  :b 2})   =>   {:a 5  :b 3}"],"^G","^28","^6","re_com/util.cljs","^:",11,"^4R",["^12",[["~$f","~$m"]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",8,"^4V",["^F",[null,"^5=","^58"]],"^9",8,"^4X",2,"^4Y",true,"^4N",["^12",["^4O",["^12",[["~$f","~$m"]]]]],"^4Q","Takes a function 'f' amd a map 'm'.  Applies 'f' to each value in 'm' and returns.\n   (fmap  inc  {:a 4  :b 2})   =>   {:a 5  :b 3}"],"~$pad-zero-number",["^ ","^4M",null,"^5",["^ ","^6","re_com/util.cljs","^7",72,"^8",7,"^9",72,"^:",22,"^4N",["^12",["^4O",["^12",[["~$num","^5L"]]]]],"^4Q","return 'num' as a string of 'len' characters, left padding with '0' as necessary"],"^G","^1H","^6","re_com/util.cljs","^:",22,"^4R",["^12",[["^5V","^5L"]]],"^4S",null,"^4T",["^12",[null,null]],"^8",1,"^4U",false,"^7",72,"^4V",["^F",[null,"^58"]],"^9",72,"^4X",2,"^4Y",true,"^4N",["^12",["^4O",["^12",[["^5V","^5L"]]]]],"^4Q","return 'num' as a string of 'len' characters, left padding with '0' as necessary"]],"^10",["^ ","^Q","^Q","^N","^N"],"~:cljs.analyzer/constants",["^ ","^S",["^F",["~:else","~:top","~:id-fn","^53","~:left"]],"~:order",["^5X","^5Z","^53","^5[","^5Y"]],"^15",["^ ","^T",["^F",[]]],"^16",["^ "],"^17",["^R","^Q","^M","^N","^O","^P"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2M",[["^63","~:static-fns"],true,["^63","~:shadow-tweaks"],null,["^63","~:source-map-inline"],null,["^63","~:elide-asserts"],false,["^63","~:optimize-constants"],null,["^63","^1<"],null,["^63","~:external-config"],null,["^63","~:tooling-config"],null,["^63","~:emit-constants"],null,["^63","~:load-tests"],null,["^63","~:form-size-threshold"],null,["^63","~:data-readers"],null,["^63","~:infer-externs"],"~:auto",["^63","^1>"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^63","~:fn-invoke-direct"],null,["^63","~:source-map"],"/dev/null"]]]