["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-upload/lib/attr-accept.js"],"~:js","shadow$provide.module$node_modules$rc_upload$lib$attr_accept=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=void 0;exports.default=function(file,acceptedFiles){if(file&&acceptedFiles){acceptedFiles=Array.isArray(acceptedFiles)?acceptedFiles:acceptedFiles.split(\",\");var fileName=file.name||\"\",mimeType=file.type||\"\",baseMimeType=mimeType.replace(/\\/.*$/,\"\");return acceptedFiles.some(function(type){var validType=type.trim();return/^\\*(\\/\\*)?$/.test(type)?\n!0:\".\"===validType.charAt(0)?(type=fileName.toLowerCase(),validType=validType.toLowerCase(),-1!==type.indexOf(validType,type.length-validType.length)):/\\/\\*$/.test(validType)?baseMimeType===validType.replace(/\\/.*$/,\"\"):mimeType===validType})}return!0}}","~:source","shadow$provide[\"module$node_modules$rc_upload$lib$attr_accept\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nvar _default = function _default(file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim(); // This is something like */*,*  allow all files\n\n      if (/^\\*(\\/\\*)?$/.test(type)) {\n        return true;\n      }\n\n      if (validType.charAt(0) === '.') {\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\n      }\n\n      if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n\n      return mimeType === validType;\n    });\n  }\n\n  return true;\n};\n\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1619101950095,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_upload$lib$attr_accept.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,6CAAf,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1GC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,OAAR,CAAkB,IAAK,EAmCvBJ,QAAA,CAAQI,OAAR,CA7BeC,QAAiB,CAACC,IAAD,CAAOC,aAAP,CAAsB,CACpD,GAAID,IAAJ,EAAYC,aAAZ,CAA2B,CACrBC,aAAAA,CAAqBC,KAAA,CAAMC,OAAN,CAAcH,aAAd,CAAA,CAA+BA,aAA/B,CAA+CA,aAAA,CAAcI,KAAd,CAAoB,GAApB,CACxE,KAAIC,SAAWN,IAAXM,CAAgBC,IAAhBD,EAAwB,EAA5B,CACIE,SAAWR,IAAXQ,CAAgBC,IAAhBD,EAAwB,EAD5B,CAEIE,aAAeF,QAAA,CAASG,OAAT,CAAiB,OAAjB,CAA0B,EAA1B,CACnB,OAAOT,cAAA,CAAmBU,IAAnB,CAAwB,QAAS,CAACH,IAAD,CAAO,CAC7C,IAAII,UAAYJ,IAAA,CAAKK,IAAL,EAEhB,OAAI,aAAA,CAAcC,IAAd,CAAmBN,IAAnB,CAAJ;AACS,CAAA,CADT,CAI4B,GAA5B,GAAII,SAAA,CAAUG,MAAV,CAAiB,CAAjB,CAAJ,EACkB,IAjBf,CAiBeV,QAAA,CAASW,WAAT,EAjBf,CAiBuC,SAjBvC,CAiBuCJ,SAAA,CAAUI,WAAV,EAjBvC,CAAoD,EAApD,GAAAC,IAAA,CAAIC,OAAJ,CAAYC,SAAZ,CAAoBF,IAApB,CAAwBG,MAAxB,CAAiCD,SAAjC,CAAwCC,MAAxC,CAgBH,EAII,OAAA,CAAQN,IAAR,CAAaF,SAAb,CAAJ,CAESH,YAFT,GAE0BG,SAAA,CAAUF,OAAV,CAAkB,OAAlB,CAA2B,EAA3B,CAF1B,CAKOH,QALP,GAKoBK,SAhByB,CAAxC,CALkB,CAyB3B,MAAO,CAAA,CA1B6C,CAZoD;\",\n\"sources\":[\"node_modules/rc-upload/lib/attr-accept.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_upload$lib$attr_accept\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nfunction endsWith(str, suffix) {\\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\\n}\\n\\nvar _default = function _default(file, acceptedFiles) {\\n  if (file && acceptedFiles) {\\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\\n    var fileName = file.name || '';\\n    var mimeType = file.type || '';\\n    var baseMimeType = mimeType.replace(/\\\\/.*$/, '');\\n    return acceptedFilesArray.some(function (type) {\\n      var validType = type.trim(); // This is something like */*,*  allow all files\\n\\n      if (/^\\\\*(\\\\/\\\\*)?$/.test(type)) {\\n        return true;\\n      }\\n\\n      if (validType.charAt(0) === '.') {\\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\\n      }\\n\\n      if (/\\\\/\\\\*$/.test(validType)) {\\n        // This is something like a image/* mime type\\n        return baseMimeType === validType.replace(/\\\\/.*$/, '');\\n      }\\n\\n      return mimeType === validType;\\n    });\\n  }\\n\\n  return true;\\n};\\n\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_default\",\"file\",\"acceptedFiles\",\"acceptedFilesArray\",\"Array\",\"isArray\",\"split\",\"fileName\",\"name\",\"mimeType\",\"type\",\"baseMimeType\",\"replace\",\"some\",\"validType\",\"trim\",\"test\",\"charAt\",\"toLowerCase\",\"str\",\"indexOf\",\"suffix\",\"length\"]\n}\n"]