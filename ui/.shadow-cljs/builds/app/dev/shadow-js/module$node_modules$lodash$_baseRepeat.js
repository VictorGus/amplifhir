["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseRepeat.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseRepeat=function(global,require,module,exports){var nativeFloor=Math.floor;module.exports=function(string,n){var result=\"\";if(!string||1>n||9007199254740991<n)return result;do n%2&&(result+=string),(n=nativeFloor(n/2))&&(string+=string);while(n);return result}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseRepeat\"] = function(global,require,module,exports) {\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor;\n\n/**\n * The base implementation of `_.repeat` which doesn't coerce arguments.\n *\n * @private\n * @param {string} string The string to repeat.\n * @param {number} n The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n */\nfunction baseRepeat(string, n) {\n  var result = '';\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    if (n) {\n      string += string;\n    }\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = baseRepeat;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1619101949182,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseRepeat.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,sCAAf,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAKnG,IAAIC,YAAcC,IAAdD,CAAmBE,KA8BvBJ,OAAA,CAAOC,OAAP,CApBAI,QAAmB,CAACC,MAAD,CAASC,CAAT,CAAY,CAC7B,IAAIC,OAAS,EACb,IAAI,CAACF,MAAL,EAAmB,CAAnB,CAAeC,CAAf,EAfqBE,gBAerB,CAAwBF,CAAxB,CACE,MAAOC,OAIT,GACMD,EAIJ,CAJQ,CAIR,GAHEC,MAGF,EAHYF,MAGZ,GADAC,CACA,CADIL,WAAA,CAAYK,CAAZ,CAAgB,CAAhB,CACJ,IACED,MADF,EACYA,MADZ,CALF,OAQSC,CART,CAUA,OAAOC,OAjBsB,CAfoE;\",\n\"sources\":[\"node_modules/lodash/_baseRepeat.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseRepeat\\\"] = function(global,require,module,exports) {\\n/** Used as references for various `Number` constants. */\\nvar MAX_SAFE_INTEGER = 9007199254740991;\\n\\n/* Built-in method references for those with the same name as other `lodash` methods. */\\nvar nativeFloor = Math.floor;\\n\\n/**\\n * The base implementation of `_.repeat` which doesn't coerce arguments.\\n *\\n * @private\\n * @param {string} string The string to repeat.\\n * @param {number} n The number of times to repeat the string.\\n * @returns {string} Returns the repeated string.\\n */\\nfunction baseRepeat(string, n) {\\n  var result = '';\\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\\n    return result;\\n  }\\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\\n  do {\\n    if (n % 2) {\\n      result += string;\\n    }\\n    n = nativeFloor(n / 2);\\n    if (n) {\\n      string += string;\\n    }\\n  } while (n);\\n\\n  return result;\\n}\\n\\nmodule.exports = baseRepeat;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"nativeFloor\",\"Math\",\"floor\",\"baseRepeat\",\"string\",\"n\",\"result\",\"MAX_SAFE_INTEGER\"]\n}\n"]