["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-tree-select/lib/OptionList.js"],"~:js","shadow$provide.module$node_modules$rc_tree_select$lib$OptionList=function(global,require,module,exports){global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireWildcard\");module=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=void 0;var _extends2=module(require(\"module$node_modules$$babel$runtime$helpers$extends\")),_toConsumableArray2=module(require(\"module$node_modules$$babel$runtime$helpers$toConsumableArray\")),\n_slicedToArray2=module(require(\"module$node_modules$$babel$runtime$helpers$slicedToArray\")),React=global(require(\"module$node_modules$react$index\")),_KeyCode=module(require(\"module$node_modules$rc_util$lib$KeyCode\")),_useMemo=module(require(\"module$node_modules$rc_util$lib$hooks$useMemo\")),_rcTree=module(require(\"module$node_modules$rc_tree$lib$index\")),_Context=require(\"module$node_modules$rc_tree_select$lib$Context\"),_useKeyValueMapping3=module(require(\"module$node_modules$rc_tree_select$lib$hooks$useKeyValueMapping\")),\n_useKeyValueMap3=module(require(\"module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap\")),HIDDEN_STYLE={width:0,height:0,display:\"flex\",overflow:\"hidden\",opacity:0,border:0,padding:0,margin:0};require=React.forwardRef(function(props,ref){var prefixCls=props.prefixCls,height=props.height,itemHeight=props.itemHeight,virtual=props.virtual,options=props.options,flattenOptions=props.flattenOptions,multiple=props.multiple,searchValue=props.searchValue,onSelect=props.onSelect,onToggleOpen=props.onToggleOpen,\nopen=props.open,notFoundContent=props.notFoundContent;props=props.onMouseEnter;var _React$useContext=React.useContext(_Context.SelectContext),checkable=_React$useContext.checkable,checkedKeys=_React$useContext.checkedKeys,halfCheckedKeys=_React$useContext.halfCheckedKeys,treeExpandedKeys=_React$useContext.treeExpandedKeys,treeDefaultExpandAll=_React$useContext.treeDefaultExpandAll,treeDefaultExpandedKeys=_React$useContext.treeDefaultExpandedKeys,onTreeExpand=_React$useContext.onTreeExpand,treeIcon=\n_React$useContext.treeIcon,showTreeIcon=_React$useContext.showTreeIcon,switcherIcon=_React$useContext.switcherIcon,treeLine=_React$useContext.treeLine,treeNodeFilterProp=_React$useContext.treeNodeFilterProp,loadData=_React$useContext.loadData,treeLoadedKeys=_React$useContext.treeLoadedKeys,treeMotion=_React$useContext.treeMotion;_React$useContext=_React$useContext.onTreeLoad;var treeRef=React.useRef(),memoOptions=(0,_useMemo.default)(function(){return options},[open,options],function(prev,next){return next[0]&&\nprev[1]!==next[1]}),_useKeyValueMap=(0,_useKeyValueMap3.default)(flattenOptions),_useKeyValueMap2=(0,_slicedToArray2.default)(_useKeyValueMap,2);_useKeyValueMap=_useKeyValueMap2[0];_useKeyValueMap2=_useKeyValueMap2[1];_useKeyValueMap=(0,_useKeyValueMapping3.default)(_useKeyValueMap,_useKeyValueMap2);_useKeyValueMap=(0,_slicedToArray2.default)(_useKeyValueMap,2);var getEntityByKey=_useKeyValueMap[0],getEntityByValue=_useKeyValueMap[1],valueKeys=React.useMemo(function(){return checkedKeys.map(function(val){return(val=\ngetEntityByValue(val))?val.key:null})},[checkedKeys,getEntityByValue]);_useKeyValueMap=React.useMemo(function(){return checkable?{checked:valueKeys,halfChecked:halfCheckedKeys}:null},[valueKeys,halfCheckedKeys,checkable]);React.useEffect(function(){if(open&&!multiple&&valueKeys.length){var _treeRef$current;null===(_treeRef$current=treeRef.current)||void 0===_treeRef$current?void 0:_treeRef$current.scrollTo({key:valueKeys[0]})}},[open]);var lowerSearchValue=String(searchValue).toLowerCase();treeDefaultExpandedKeys=\nReact.useState(treeDefaultExpandedKeys);treeDefaultExpandedKeys=(0,_slicedToArray2.default)(treeDefaultExpandedKeys,2);var expandedKeys=treeDefaultExpandedKeys[0],setExpandedKeys=treeDefaultExpandedKeys[1];treeDefaultExpandedKeys=React.useState(null);treeDefaultExpandedKeys=(0,_slicedToArray2.default)(treeDefaultExpandedKeys,2);var searchExpandedKeys=treeDefaultExpandedKeys[0],setSearchExpandedKeys=treeDefaultExpandedKeys[1];treeDefaultExpandedKeys=React.useMemo(function(){return treeExpandedKeys?\n(0,_toConsumableArray2.default)(treeExpandedKeys):searchValue?searchExpandedKeys:expandedKeys},[expandedKeys,searchExpandedKeys,lowerSearchValue,treeExpandedKeys]);React.useEffect(function(){searchValue&&setSearchExpandedKeys(flattenOptions.map(function(o){return o.key}))},[searchValue]);_useKeyValueMap2=function(event){event.preventDefault()};var onInternalSelect=function(_,_ref){_=getEntityByKey(_ref.node.key,checkable?\"checkbox\":\"select\");null!==_&&onSelect(_.data.value,{selected:!checkedKeys.includes(_.data.value)});\nmultiple||onToggleOpen(!1)},_React$useState5=React.useState(null);_React$useState5=(0,_slicedToArray2.default)(_React$useState5,2);var activeKey=_React$useState5[0];_React$useState5=_React$useState5[1];var activeEntity=getEntityByKey(activeKey);React.useImperativeHandle(ref,function(){var _treeRef$current2;return{scrollTo:null===(_treeRef$current2=treeRef.current)||void 0===_treeRef$current2?void 0:_treeRef$current2.scrollTo,onKeyDown:function(event){var _treeRef$current3;switch(event.which){case _KeyCode.default.UP:case _KeyCode.default.DOWN:case _KeyCode.default.LEFT:case _KeyCode.default.RIGHT:null===\n(_treeRef$current3=treeRef.current)||void 0===_treeRef$current3?void 0:_treeRef$current3.onKeyDown(event);break;case _KeyCode.default.ENTER:var _activeEntity$data;!1!==(null===activeEntity||void 0===activeEntity?void 0:null===(_activeEntity$data=activeEntity.data)||void 0===_activeEntity$data?void 0:_activeEntity$data.selectable)&&onInternalSelect(null,{node:{key:activeKey},selected:!checkedKeys.includes(activeEntity.data.value)});break;case _KeyCode.default.ESC:onToggleOpen(!1)}},onKeyUp:function(){}}});\nif(0===memoOptions.length)return React.createElement(\"div\",{role:\"listbox\",className:\"\".concat(prefixCls,\"-empty\"),onMouseDown:_useKeyValueMap2},notFoundContent);ref={};treeLoadedKeys&&(ref.loadedKeys=treeLoadedKeys);treeDefaultExpandedKeys&&(ref.expandedKeys=treeDefaultExpandedKeys);return React.createElement(\"div\",{onMouseDown:_useKeyValueMap2,onMouseEnter:props},activeEntity&&open&&React.createElement(\"span\",{style:HIDDEN_STYLE,\"aria-live\":\"assertive\"},activeEntity.data.value),React.createElement(_rcTree.default,\n(0,_extends2.default)({ref:treeRef,focusable:!1,prefixCls:\"\".concat(prefixCls,\"-tree\"),treeData:memoOptions,height,itemHeight,virtual,multiple,icon:treeIcon,showIcon:showTreeIcon,switcherIcon,showLine:treeLine,loadData:searchValue?null:loadData,motion:treeMotion,checkable,checkStrictly:!0,checkedKeys:_useKeyValueMap,selectedKeys:checkable?[]:valueKeys,defaultExpandAll:treeDefaultExpandAll},ref,{onActiveChange:_React$useState5,onSelect:onInternalSelect,onCheck:onInternalSelect,onExpand:function(keys){setExpandedKeys(keys);\nsetSearchExpandedKeys(keys);onTreeExpand&&onTreeExpand(keys)},onLoad:_React$useContext,filterTreeNode:function(treeNode){return lowerSearchValue?String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue):!1}})))});require.displayName=\"OptionList\";exports.default=require}","~:source","shadow$provide[\"module$node_modules$rc_tree_select$lib$OptionList\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _KeyCode = _interopRequireDefault(require(\"rc-util/lib/KeyCode\"));\n\nvar _useMemo = _interopRequireDefault(require(\"rc-util/lib/hooks/useMemo\"));\n\nvar _rcTree = _interopRequireDefault(require(\"rc-tree\"));\n\nvar _Context = require(\"./Context\");\n\nvar _useKeyValueMapping3 = _interopRequireDefault(require(\"./hooks/useKeyValueMapping\"));\n\nvar _useKeyValueMap3 = _interopRequireDefault(require(\"./hooks/useKeyValueMap\"));\n\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar OptionList = function OptionList(props, ref) {\n  var prefixCls = props.prefixCls,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      options = props.options,\n      flattenOptions = props.flattenOptions,\n      multiple = props.multiple,\n      searchValue = props.searchValue,\n      onSelect = props.onSelect,\n      onToggleOpen = props.onToggleOpen,\n      open = props.open,\n      notFoundContent = props.notFoundContent,\n      onMouseEnter = props.onMouseEnter;\n\n  var _React$useContext = React.useContext(_Context.SelectContext),\n      checkable = _React$useContext.checkable,\n      checkedKeys = _React$useContext.checkedKeys,\n      halfCheckedKeys = _React$useContext.halfCheckedKeys,\n      treeExpandedKeys = _React$useContext.treeExpandedKeys,\n      treeDefaultExpandAll = _React$useContext.treeDefaultExpandAll,\n      treeDefaultExpandedKeys = _React$useContext.treeDefaultExpandedKeys,\n      onTreeExpand = _React$useContext.onTreeExpand,\n      treeIcon = _React$useContext.treeIcon,\n      showTreeIcon = _React$useContext.showTreeIcon,\n      switcherIcon = _React$useContext.switcherIcon,\n      treeLine = _React$useContext.treeLine,\n      treeNodeFilterProp = _React$useContext.treeNodeFilterProp,\n      loadData = _React$useContext.loadData,\n      treeLoadedKeys = _React$useContext.treeLoadedKeys,\n      treeMotion = _React$useContext.treeMotion,\n      onTreeLoad = _React$useContext.onTreeLoad;\n\n  var treeRef = React.useRef();\n  var memoOptions = (0, _useMemo.default)(function () {\n    return options;\n  }, [open, options], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  });\n\n  var _useKeyValueMap = (0, _useKeyValueMap3.default)(flattenOptions),\n      _useKeyValueMap2 = (0, _slicedToArray2.default)(_useKeyValueMap, 2),\n      cacheKeyMap = _useKeyValueMap2[0],\n      cacheValueMap = _useKeyValueMap2[1];\n\n  var _useKeyValueMapping = (0, _useKeyValueMapping3.default)(cacheKeyMap, cacheValueMap),\n      _useKeyValueMapping2 = (0, _slicedToArray2.default)(_useKeyValueMapping, 2),\n      getEntityByKey = _useKeyValueMapping2[0],\n      getEntityByValue = _useKeyValueMapping2[1]; // ========================== Values ==========================\n\n\n  var valueKeys = React.useMemo(function () {\n    return checkedKeys.map(function (val) {\n      var entity = getEntityByValue(val);\n      return entity ? entity.key : null;\n    });\n  }, [checkedKeys, getEntityByValue]);\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n\n    return {\n      checked: valueKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [valueKeys, halfCheckedKeys, checkable]); // ========================== Scroll ==========================\n\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && valueKeys.length) {\n      var _treeRef$current;\n\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 ? void 0 : _treeRef$current.scrollTo({\n        key: valueKeys[0]\n      });\n    }\n  }, [open]); // ========================== Search ==========================\n\n  var lowerSearchValue = String(searchValue).toLowerCase();\n\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  }; // =========================== Keys ===========================\n\n\n  var _React$useState = React.useState(treeDefaultExpandedKeys),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      expandedKeys = _React$useState2[0],\n      setExpandedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      searchExpandedKeys = _React$useState4[0],\n      setSearchExpandedKeys = _React$useState4[1];\n\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return (0, _toConsumableArray2.default)(treeExpandedKeys);\n    }\n\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, lowerSearchValue, treeExpandedKeys]);\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(flattenOptions.map(function (o) {\n        return o.key;\n      }));\n    }\n  }, [searchValue]);\n\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  }; // ========================== Events ==========================\n\n\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n\n  var onInternalSelect = function onInternalSelect(_, _ref) {\n    var key = _ref.node.key;\n    var entity = getEntityByKey(key, checkable ? 'checkbox' : 'select');\n\n    if (entity !== null) {\n      onSelect(entity.data.value, {\n        selected: !checkedKeys.includes(entity.data.value)\n      });\n    }\n\n    if (!multiple) {\n      onToggleOpen(false);\n    }\n  }; // ========================= Keyboard =========================\n\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      activeKey = _React$useState6[0],\n      setActiveKey = _React$useState6[1];\n\n  var activeEntity = getEntityByKey(activeKey);\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n\n        var which = event.which;\n\n        switch (which) {\n          // >>> Arrow keys\n          case _KeyCode.default.UP:\n          case _KeyCode.default.DOWN:\n          case _KeyCode.default.LEFT:\n          case _KeyCode.default.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 ? void 0 : _treeRef$current3.onKeyDown(event);\n            break;\n          // >>> Select item\n\n          case _KeyCode.default.ENTER:\n            {\n              var _activeEntity$data;\n\n              if ((activeEntity === null || activeEntity === void 0 ? void 0 : (_activeEntity$data = activeEntity.data) === null || _activeEntity$data === void 0 ? void 0 : _activeEntity$data.selectable) !== false) {\n                onInternalSelect(null, {\n                  node: {\n                    key: activeKey\n                  },\n                  selected: !checkedKeys.includes(activeEntity.data.value)\n                });\n              }\n\n              break;\n            }\n          // >>> Close\n\n          case _KeyCode.default.ESC:\n            {\n              onToggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  }); // ========================== Render ==========================\n\n  if (memoOptions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n\n  var treeProps = {};\n\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown,\n    onMouseEnter: onMouseEnter\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.data.value), /*#__PURE__*/React.createElement(_rcTree.default, (0, _extends2.default)({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoOptions,\n    height: height,\n    itemHeight: itemHeight,\n    virtual: virtual,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: searchValue ? null : loadData,\n    motion: treeMotion // We handle keys by out instead tree self\n    ,\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? valueKeys : [],\n    defaultExpandAll: treeDefaultExpandAll\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode\n  })));\n};\n\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nRefOptionList.displayName = 'OptionList';\nvar _default = RefOptionList;\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$rc_tree$lib$index","~$module$node_modules$$babel$runtime$helpers$interopRequireWildcard","~$module$node_modules$$babel$runtime$helpers$slicedToArray","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$toConsumableArray","~$module$node_modules$rc_tree_select$lib$hooks$useKeyValueMap","~$module$node_modules$$babel$runtime$helpers$extends","~$module$node_modules$rc_util$lib$KeyCode","~$module$node_modules$rc_util$lib$hooks$useMemo","~$module$node_modules$rc_tree_select$lib$hooks$useKeyValueMapping","~$module$node_modules$rc_tree_select$lib$Context"]],"~:properties",["^5",["role","defaultExpandAll","selected","loadData","width","halfChecked","virtual","height","margin","treeData","checkStrictly","className","checkedKeys","displayName","key","border","__esModule","padding","onKeyUp","loadedKeys","onMouseDown","style","value","overflow","expandedKeys","onActiveChange","onMouseEnter","ref","prefixCls","selectedKeys","onExpand","itemHeight","display","onKeyDown","checkable","motion","filterTreeNode","onLoad","onSelect","showIcon","default","checked","onCheck","showLine","opacity","switcherIcon","scrollTo","node","focusable","multiple","icon"]],"~:compiled-at",1619101950053,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_tree_select$lib$OptionList.js\",\n\"lineCount\":14,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/rc-tree-select/lib/OptionList.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_tree_select$lib$OptionList\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireWildcard = require(\\\"@babel/runtime/helpers/interopRequireWildcard\\\");\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n\\nvar _toConsumableArray2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/toConsumableArray\\\"));\\n\\nvar _slicedToArray2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/slicedToArray\\\"));\\n\\nvar React = _interopRequireWildcard(require(\\\"react\\\"));\\n\\nvar _KeyCode = _interopRequireDefault(require(\\\"rc-util/lib/KeyCode\\\"));\\n\\nvar _useMemo = _interopRequireDefault(require(\\\"rc-util/lib/hooks/useMemo\\\"));\\n\\nvar _rcTree = _interopRequireDefault(require(\\\"rc-tree\\\"));\\n\\nvar _Context = require(\\\"./Context\\\");\\n\\nvar _useKeyValueMapping3 = _interopRequireDefault(require(\\\"./hooks/useKeyValueMapping\\\"));\\n\\nvar _useKeyValueMap3 = _interopRequireDefault(require(\\\"./hooks/useKeyValueMap\\\"));\\n\\nvar HIDDEN_STYLE = {\\n  width: 0,\\n  height: 0,\\n  display: 'flex',\\n  overflow: 'hidden',\\n  opacity: 0,\\n  border: 0,\\n  padding: 0,\\n  margin: 0\\n};\\n\\nvar OptionList = function OptionList(props, ref) {\\n  var prefixCls = props.prefixCls,\\n      height = props.height,\\n      itemHeight = props.itemHeight,\\n      virtual = props.virtual,\\n      options = props.options,\\n      flattenOptions = props.flattenOptions,\\n      multiple = props.multiple,\\n      searchValue = props.searchValue,\\n      onSelect = props.onSelect,\\n      onToggleOpen = props.onToggleOpen,\\n      open = props.open,\\n      notFoundContent = props.notFoundContent,\\n      onMouseEnter = props.onMouseEnter;\\n\\n  var _React$useContext = React.useContext(_Context.SelectContext),\\n      checkable = _React$useContext.checkable,\\n      checkedKeys = _React$useContext.checkedKeys,\\n      halfCheckedKeys = _React$useContext.halfCheckedKeys,\\n      treeExpandedKeys = _React$useContext.treeExpandedKeys,\\n      treeDefaultExpandAll = _React$useContext.treeDefaultExpandAll,\\n      treeDefaultExpandedKeys = _React$useContext.treeDefaultExpandedKeys,\\n      onTreeExpand = _React$useContext.onTreeExpand,\\n      treeIcon = _React$useContext.treeIcon,\\n      showTreeIcon = _React$useContext.showTreeIcon,\\n      switcherIcon = _React$useContext.switcherIcon,\\n      treeLine = _React$useContext.treeLine,\\n      treeNodeFilterProp = _React$useContext.treeNodeFilterProp,\\n      loadData = _React$useContext.loadData,\\n      treeLoadedKeys = _React$useContext.treeLoadedKeys,\\n      treeMotion = _React$useContext.treeMotion,\\n      onTreeLoad = _React$useContext.onTreeLoad;\\n\\n  var treeRef = React.useRef();\\n  var memoOptions = (0, _useMemo.default)(function () {\\n    return options;\\n  }, [open, options], function (prev, next) {\\n    return next[0] && prev[1] !== next[1];\\n  });\\n\\n  var _useKeyValueMap = (0, _useKeyValueMap3.default)(flattenOptions),\\n      _useKeyValueMap2 = (0, _slicedToArray2.default)(_useKeyValueMap, 2),\\n      cacheKeyMap = _useKeyValueMap2[0],\\n      cacheValueMap = _useKeyValueMap2[1];\\n\\n  var _useKeyValueMapping = (0, _useKeyValueMapping3.default)(cacheKeyMap, cacheValueMap),\\n      _useKeyValueMapping2 = (0, _slicedToArray2.default)(_useKeyValueMapping, 2),\\n      getEntityByKey = _useKeyValueMapping2[0],\\n      getEntityByValue = _useKeyValueMapping2[1]; // ========================== Values ==========================\\n\\n\\n  var valueKeys = React.useMemo(function () {\\n    return checkedKeys.map(function (val) {\\n      var entity = getEntityByValue(val);\\n      return entity ? entity.key : null;\\n    });\\n  }, [checkedKeys, getEntityByValue]);\\n  var mergedCheckedKeys = React.useMemo(function () {\\n    if (!checkable) {\\n      return null;\\n    }\\n\\n    return {\\n      checked: valueKeys,\\n      halfChecked: halfCheckedKeys\\n    };\\n  }, [valueKeys, halfCheckedKeys, checkable]); // ========================== Scroll ==========================\\n\\n  React.useEffect(function () {\\n    // Single mode should scroll to current key\\n    if (open && !multiple && valueKeys.length) {\\n      var _treeRef$current;\\n\\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 ? void 0 : _treeRef$current.scrollTo({\\n        key: valueKeys[0]\\n      });\\n    }\\n  }, [open]); // ========================== Search ==========================\\n\\n  var lowerSearchValue = String(searchValue).toLowerCase();\\n\\n  var filterTreeNode = function filterTreeNode(treeNode) {\\n    if (!lowerSearchValue) {\\n      return false;\\n    }\\n\\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\\n  }; // =========================== Keys ===========================\\n\\n\\n  var _React$useState = React.useState(treeDefaultExpandedKeys),\\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\\n      expandedKeys = _React$useState2[0],\\n      setExpandedKeys = _React$useState2[1];\\n\\n  var _React$useState3 = React.useState(null),\\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\\n      searchExpandedKeys = _React$useState4[0],\\n      setSearchExpandedKeys = _React$useState4[1];\\n\\n  var mergedExpandedKeys = React.useMemo(function () {\\n    if (treeExpandedKeys) {\\n      return (0, _toConsumableArray2.default)(treeExpandedKeys);\\n    }\\n\\n    return searchValue ? searchExpandedKeys : expandedKeys;\\n  }, [expandedKeys, searchExpandedKeys, lowerSearchValue, treeExpandedKeys]);\\n  React.useEffect(function () {\\n    if (searchValue) {\\n      setSearchExpandedKeys(flattenOptions.map(function (o) {\\n        return o.key;\\n      }));\\n    }\\n  }, [searchValue]);\\n\\n  var onInternalExpand = function onInternalExpand(keys) {\\n    setExpandedKeys(keys);\\n    setSearchExpandedKeys(keys);\\n\\n    if (onTreeExpand) {\\n      onTreeExpand(keys);\\n    }\\n  }; // ========================== Events ==========================\\n\\n\\n  var onListMouseDown = function onListMouseDown(event) {\\n    event.preventDefault();\\n  };\\n\\n  var onInternalSelect = function onInternalSelect(_, _ref) {\\n    var key = _ref.node.key;\\n    var entity = getEntityByKey(key, checkable ? 'checkbox' : 'select');\\n\\n    if (entity !== null) {\\n      onSelect(entity.data.value, {\\n        selected: !checkedKeys.includes(entity.data.value)\\n      });\\n    }\\n\\n    if (!multiple) {\\n      onToggleOpen(false);\\n    }\\n  }; // ========================= Keyboard =========================\\n\\n\\n  var _React$useState5 = React.useState(null),\\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\\n      activeKey = _React$useState6[0],\\n      setActiveKey = _React$useState6[1];\\n\\n  var activeEntity = getEntityByKey(activeKey);\\n  React.useImperativeHandle(ref, function () {\\n    var _treeRef$current2;\\n\\n    return {\\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\\n      onKeyDown: function onKeyDown(event) {\\n        var _treeRef$current3;\\n\\n        var which = event.which;\\n\\n        switch (which) {\\n          // >>> Arrow keys\\n          case _KeyCode.default.UP:\\n          case _KeyCode.default.DOWN:\\n          case _KeyCode.default.LEFT:\\n          case _KeyCode.default.RIGHT:\\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 ? void 0 : _treeRef$current3.onKeyDown(event);\\n            break;\\n          // >>> Select item\\n\\n          case _KeyCode.default.ENTER:\\n            {\\n              var _activeEntity$data;\\n\\n              if ((activeEntity === null || activeEntity === void 0 ? void 0 : (_activeEntity$data = activeEntity.data) === null || _activeEntity$data === void 0 ? void 0 : _activeEntity$data.selectable) !== false) {\\n                onInternalSelect(null, {\\n                  node: {\\n                    key: activeKey\\n                  },\\n                  selected: !checkedKeys.includes(activeEntity.data.value)\\n                });\\n              }\\n\\n              break;\\n            }\\n          // >>> Close\\n\\n          case _KeyCode.default.ESC:\\n            {\\n              onToggleOpen(false);\\n            }\\n        }\\n      },\\n      onKeyUp: function onKeyUp() {}\\n    };\\n  }); // ========================== Render ==========================\\n\\n  if (memoOptions.length === 0) {\\n    return /*#__PURE__*/React.createElement(\\\"div\\\", {\\n      role: \\\"listbox\\\",\\n      className: \\\"\\\".concat(prefixCls, \\\"-empty\\\"),\\n      onMouseDown: onListMouseDown\\n    }, notFoundContent);\\n  }\\n\\n  var treeProps = {};\\n\\n  if (treeLoadedKeys) {\\n    treeProps.loadedKeys = treeLoadedKeys;\\n  }\\n\\n  if (mergedExpandedKeys) {\\n    treeProps.expandedKeys = mergedExpandedKeys;\\n  }\\n\\n  return /*#__PURE__*/React.createElement(\\\"div\\\", {\\n    onMouseDown: onListMouseDown,\\n    onMouseEnter: onMouseEnter\\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\\\"span\\\", {\\n    style: HIDDEN_STYLE,\\n    \\\"aria-live\\\": \\\"assertive\\\"\\n  }, activeEntity.data.value), /*#__PURE__*/React.createElement(_rcTree.default, (0, _extends2.default)({\\n    ref: treeRef,\\n    focusable: false,\\n    prefixCls: \\\"\\\".concat(prefixCls, \\\"-tree\\\"),\\n    treeData: memoOptions,\\n    height: height,\\n    itemHeight: itemHeight,\\n    virtual: virtual,\\n    multiple: multiple,\\n    icon: treeIcon,\\n    showIcon: showTreeIcon,\\n    switcherIcon: switcherIcon,\\n    showLine: treeLine,\\n    loadData: searchValue ? null : loadData,\\n    motion: treeMotion // We handle keys by out instead tree self\\n    ,\\n    checkable: checkable,\\n    checkStrictly: true,\\n    checkedKeys: mergedCheckedKeys,\\n    selectedKeys: !checkable ? valueKeys : [],\\n    defaultExpandAll: treeDefaultExpandAll\\n  }, treeProps, {\\n    // Proxy event out\\n    onActiveChange: setActiveKey,\\n    onSelect: onInternalSelect,\\n    onCheck: onInternalSelect,\\n    onExpand: onInternalExpand,\\n    onLoad: onTreeLoad,\\n    filterTreeNode: filterTreeNode\\n  })));\\n};\\n\\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\\nRefOptionList.displayName = 'OptionList';\\nvar _default = RefOptionList;\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireWildcard\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_extends2\",\"_toConsumableArray2\",\"_slicedToArray2\",\"React\",\"_KeyCode\",\"_useMemo\",\"_rcTree\",\"_Context\",\"_useKeyValueMapping3\",\"_useKeyValueMap3\",\"HIDDEN_STYLE\",\"width\",\"height\",\"display\",\"overflow\",\"opacity\",\"border\",\"padding\",\"margin\",\"RefOptionList\",\"forwardRef\",\"OptionList\",\"props\",\"ref\",\"prefixCls\",\"itemHeight\",\"virtual\",\"options\",\"flattenOptions\",\"multiple\",\"searchValue\",\"onSelect\",\"onToggleOpen\",\"open\",\"notFoundContent\",\"onMouseEnter\",\"_React$useContext\",\"useContext\",\"SelectContext\",\"checkable\",\"checkedKeys\",\"halfCheckedKeys\",\"treeExpandedKeys\",\"treeDefaultExpandAll\",\"treeDefaultExpandedKeys\",\"onTreeExpand\",\"treeIcon\",\"showTreeIcon\",\"switcherIcon\",\"treeLine\",\"treeNodeFilterProp\",\"loadData\",\"treeLoadedKeys\",\"treeMotion\",\"onTreeLoad\",\"treeRef\",\"useRef\",\"memoOptions\",\"prev\",\"next\",\"_useKeyValueMap\",\"_useKeyValueMap2\",\"cacheKeyMap\",\"cacheValueMap\",\"_useKeyValueMapping\",\"_useKeyValueMapping2\",\"getEntityByKey\",\"getEntityByValue\",\"valueKeys\",\"useMemo\",\"map\",\"val\",\"entity\",\"key\",\"mergedCheckedKeys\",\"checked\",\"halfChecked\",\"useEffect\",\"length\",\"_treeRef$current\",\"current\",\"scrollTo\",\"lowerSearchValue\",\"String\",\"toLowerCase\",\"_React$useState\",\"useState\",\"_React$useState2\",\"expandedKeys\",\"setExpandedKeys\",\"_React$useState3\",\"_React$useState4\",\"searchExpandedKeys\",\"setSearchExpandedKeys\",\"mergedExpandedKeys\",\"o\",\"onListMouseDown\",\"event\",\"preventDefault\",\"onInternalSelect\",\"_\",\"_ref\",\"node\",\"data\",\"selected\",\"includes\",\"_React$useState5\",\"_React$useState6\",\"activeKey\",\"setActiveKey\",\"activeEntity\",\"useImperativeHandle\",\"_treeRef$current2\",\"onKeyDown\",\"_treeRef$current3\",\"which\",\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"ENTER\",\"_activeEntity$data\",\"selectable\",\"ESC\",\"onKeyUp\",\"createElement\",\"role\",\"className\",\"concat\",\"onMouseDown\",\"treeProps\",\"loadedKeys\",\"style\",\"focusable\",\"treeData\",\"icon\",\"showIcon\",\"showLine\",\"motion\",\"checkStrictly\",\"selectedKeys\",\"defaultExpandAll\",\"onActiveChange\",\"onCheck\",\"onExpand\",\"onInternalExpand\",\"keys\",\"onLoad\",\"filterTreeNode\",\"treeNode\",\"displayName\"]\n}\n"]