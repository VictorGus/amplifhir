["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-input-number/lib/hooks/useCursor.js"],"~:js","shadow$provide.module$node_modules$rc_input_number$lib$hooks$useCursor=function(global,require,module,exports){global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(input,focused){var selectionRef=(0,_react.useRef)(null);return[function(){try{var start=input.selectionStart,end=input.selectionEnd,value=input.value,beforeTxt=value.substring(0,start),afterTxt=value.substring(end);selectionRef.current=\n{start,end,value,beforeTxt,afterTxt}}catch(e){}},function(){if(input&&selectionRef.current&&focused)try{var value=input.value,_selectionRef$current=selectionRef.current,beforeTxt=_selectionRef$current.beforeTxt,start=_selectionRef$current.start,startPos=value.length;if(value.endsWith(_selectionRef$current.afterTxt))startPos=value.length-selectionRef.current.afterTxt.length;else if(value.startsWith(beforeTxt))startPos=beforeTxt.length;else{var newIndex=value.indexOf(beforeTxt[start-1],start-1);-1!==\nnewIndex&&(startPos=newIndex+1)}input.setSelectionRange(startPos,startPos)}catch(e){(0,_warning.default)(!1,\"Something warning of cursor restore. Please fire issue about this: \".concat(e.message))}}]};var _react=require(\"module$node_modules$react$index\"),_warning=global(require(\"module$node_modules$rc_util$lib$warning\"))}","~:source","shadow$provide[\"module$node_modules$rc_input_number$lib$hooks$useCursor\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCursor;\n\nvar _react = require(\"react\");\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\n/**\n * Keep input cursor in the correct position if possible.\n * Is this necessary since we have `formatter` which may mass the content?\n */\nfunction useCursor(input, focused) {\n  var selectionRef = (0, _react.useRef)(null);\n\n  function recordCursor() {\n    // Record position\n    try {\n      var start = input.selectionStart,\n          end = input.selectionEnd,\n          value = input.value;\n      var beforeTxt = value.substring(0, start);\n      var afterTxt = value.substring(end);\n      selectionRef.current = {\n        start: start,\n        end: end,\n        value: value,\n        beforeTxt: beforeTxt,\n        afterTxt: afterTxt\n      };\n    } catch (e) {// Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }\n  /**\n   * Restore logic:\n   *  1. back string same\n   *  2. start string same\n   */\n\n\n  function restoreCursor() {\n    if (input && selectionRef.current && focused) {\n      try {\n        var value = input.value;\n        var _selectionRef$current = selectionRef.current,\n            beforeTxt = _selectionRef$current.beforeTxt,\n            afterTxt = _selectionRef$current.afterTxt,\n            start = _selectionRef$current.start;\n        var startPos = value.length;\n\n        if (value.endsWith(afterTxt)) {\n          startPos = value.length - selectionRef.current.afterTxt.length;\n        } else if (value.startsWith(beforeTxt)) {\n          startPos = beforeTxt.length;\n        } else {\n          var beforeLastChar = beforeTxt[start - 1];\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\n\n          if (newIndex !== -1) {\n            startPos = newIndex + 1;\n          }\n        }\n\n        input.setSelectionRange(startPos, startPos);\n      } catch (e) {\n        (0, _warning.default)(false, \"Something warning of cursor restore. Please fire issue about this: \".concat(e.message));\n      }\n    }\n  }\n\n  return [recordCursor, restoreCursor];\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$rc_util$lib$warning"]],"~:properties",["^5",["__esModule","beforeTxt","value","start","current","default","end","afterTxt"]],"~:compiled-at",1619101949743,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_input_number$lib$hooks$useCursor.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAe,uDAAf,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAE7BI,OAAA,CAAOC,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAA,CAAQK,OAAR,CAUAC,QAAkB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CACjC,IAAIC,aAAe,CAAC,CAAA,CAAGC,MAAH,CAAUC,MAAX,EAAmB,IAAnB,CA2DnB,OAAO,CAzDPC,QAAqB,EAAG,CAEtB,GAAI,CAAA,IACEC,MAAQN,KAARM,CAAcC,cADhB,CAEEC,IAAMR,KAANQ,CAAYC,YAFd,CAGEZ,MAAQG,KAARH,CAAcA,KAHhB,CAIEa,UAAYb,KAAA,CAAMc,SAAN,CAAgB,CAAhB,CAAmBL,KAAnB,CAJd,CAKEM,SAAWf,KAAA,CAAMc,SAAN,CAAgBH,GAAhB,CACfN,aAAA,CAAaW,OAAb;AAAuB,CACdP,KADc,CAEhBE,GAFgB,CAGdX,KAHc,CAIVa,SAJU,CAKXE,QALW,CANrB,CAaF,MAAOE,CAAP,CAAU,EAfU,CAyDjB,CA9BPC,QAAsB,EAAG,CACvB,GAAIf,KAAJ,EAAaE,YAAb,CAA0BW,OAA1B,EAAqCZ,OAArC,CACE,GAAI,CACF,IAAIJ,MAAQG,KAARH,CAAcA,KAAlB,CACImB,sBAAwBd,YAAxBc,CAAqCH,OADzC,CAEIH,UAAYM,qBAAZN,CAAkCA,SAFtC,CAIIJ,MAAQU,qBAARV,CAA8BA,KAJlC,CAKIW,SAAWpB,KAAXoB,CAAiBC,MAErB,IAAIrB,KAAA,CAAMsB,QAAN,CAJWH,qBAIX,CAJiCJ,QAIjC,CAAJ,CACEK,QAAA,CAAWpB,KAAX,CAAiBqB,MAAjB,CAA0BhB,YAA1B,CAAuCW,OAAvC,CAA+CD,QAA/C,CAAwDM,MAD1D,KAEO,IAAIrB,KAAA,CAAMuB,UAAN,CAAiBV,SAAjB,CAAJ,CACLO,QAAA,CAAWP,SAAX,CAAqBQ,MADhB,KAEA,CAEL,IAAIG,SAAWxB,KAAA,CAAMyB,OAAN,CADMZ,SAAAa,CAAUjB,KAAViB,CAAkB,CAAlBA,CACN,CAA8BjB,KAA9B,CAAsC,CAAtC,CAEE,GAAjB;AAAIe,QAAJ,GACEJ,QADF,CACaI,QADb,CACwB,CADxB,CAJK,CASPrB,KAAA,CAAMwB,iBAAN,CAAwBP,QAAxB,CAAkCA,QAAlC,CArBE,CAsBF,MAAOH,CAAP,CAAU,CACV,CAAC,CAAA,CAAGW,QAAH,CAAY3B,OAAb,EAAsB,CAAA,CAAtB,CAA6B4B,qEAAA,CAAsEA,MAAtE,CAA6EZ,CAA7E,CAA+Ea,OAA/E,CAA7B,CADU,CAxBS,CA8BlB,CA5D0B,CARnC,KAAIxB,OAASZ,OAAA,CAAQ,iCAAR,CAAb,CAEIkC,SAAW/B,MAAA,CAAuBH,OAAA,CAAQ,yCAAR,CAAvB,CAZqG;\",\n\"sources\":[\"node_modules/rc-input-number/lib/hooks/useCursor.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_input_number$lib$hooks$useCursor\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = useCursor;\\n\\nvar _react = require(\\\"react\\\");\\n\\nvar _warning = _interopRequireDefault(require(\\\"rc-util/lib/warning\\\"));\\n\\n/**\\n * Keep input cursor in the correct position if possible.\\n * Is this necessary since we have `formatter` which may mass the content?\\n */\\nfunction useCursor(input, focused) {\\n  var selectionRef = (0, _react.useRef)(null);\\n\\n  function recordCursor() {\\n    // Record position\\n    try {\\n      var start = input.selectionStart,\\n          end = input.selectionEnd,\\n          value = input.value;\\n      var beforeTxt = value.substring(0, start);\\n      var afterTxt = value.substring(end);\\n      selectionRef.current = {\\n        start: start,\\n        end: end,\\n        value: value,\\n        beforeTxt: beforeTxt,\\n        afterTxt: afterTxt\\n      };\\n    } catch (e) {// Fix error in Chrome:\\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\\n      // http://stackoverflow.com/q/21177489/3040605\\n    }\\n  }\\n  /**\\n   * Restore logic:\\n   *  1. back string same\\n   *  2. start string same\\n   */\\n\\n\\n  function restoreCursor() {\\n    if (input && selectionRef.current && focused) {\\n      try {\\n        var value = input.value;\\n        var _selectionRef$current = selectionRef.current,\\n            beforeTxt = _selectionRef$current.beforeTxt,\\n            afterTxt = _selectionRef$current.afterTxt,\\n            start = _selectionRef$current.start;\\n        var startPos = value.length;\\n\\n        if (value.endsWith(afterTxt)) {\\n          startPos = value.length - selectionRef.current.afterTxt.length;\\n        } else if (value.startsWith(beforeTxt)) {\\n          startPos = beforeTxt.length;\\n        } else {\\n          var beforeLastChar = beforeTxt[start - 1];\\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\\n\\n          if (newIndex !== -1) {\\n            startPos = newIndex + 1;\\n          }\\n        }\\n\\n        input.setSelectionRange(startPos, startPos);\\n      } catch (e) {\\n        (0, _warning.default)(false, \\\"Something warning of cursor restore. Please fire issue about this: \\\".concat(e.message));\\n      }\\n    }\\n  }\\n\\n  return [recordCursor, restoreCursor];\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"useCursor\",\"input\",\"focused\",\"selectionRef\",\"_react\",\"useRef\",\"recordCursor\",\"start\",\"selectionStart\",\"end\",\"selectionEnd\",\"beforeTxt\",\"substring\",\"afterTxt\",\"current\",\"e\",\"restoreCursor\",\"_selectionRef$current\",\"startPos\",\"length\",\"endsWith\",\"startsWith\",\"newIndex\",\"indexOf\",\"beforeLastChar\",\"setSelectionRange\",\"_warning\",\"concat\",\"message\"]\n}\n"]